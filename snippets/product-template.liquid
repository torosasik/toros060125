{%- comment -%}
  This file has been modified by the Yoast SEO for Shopify app.
  You can learn more about this (and learn how to cleanly revert these changes) at https://yoa.st/removing-theme-changes.
{%- endcomment -%}
{% comment %}
  Renders product detail

  Accepts:
  - product: {Object} Product Liquid object (optional)
  - is_product_page: {Boolean} is main-product section. Default: false (optional)
  - lazy_load: {Boolean} Image should be lazy loaded. Default: true (optional)
  - enable_sticky_image: {Boolean} Sticky content when scroll down. Default: true (optional)
  - full_width: {Boolean} Visible full width
  - media_layout: {String} Product media layout type. Values are 'thumbnail_slider', 'stacked', '2_columns'
  - show_thumbnail_desktop: {Boolean} Show thumnail on desktop
  - show_thumbnail_mobile: {Boolean} Show thumnail on mobile
  - show_arrow_button: {Boolean} Show next/previous slider on desktop
  - mobile_media_full: {Boolean} Is media visible full with in mobile
  - featured_product: {Boolean} Is Featured product
  - quick-view: {Boolean} is Quick view
  Usage:
  {% render 'product-template', lazy_load: false %}
{% endcomment %}

{%- liquid

  assign btn_addtocart = false
  assign blocktype = section.blocks | map: 'type' | uniq
  if blocktype contains 'buy_buttons'
    assign btn_addtocart = true
  endif

  assign unavailable_text = 'products.product.unavailable' | t
  assign product_form_id = 'product-form-' | append: section.id

  assign rounded_corner_image = false
  if settings.edges_type == 'rounded_corners'
    assign rounded_corner_image = true
  endif
  assign customize_picker_required = false
  assign type_file_upload = false
  for block in section.blocks
    if block.type == 'buy_buttons'
      if block.settings.preorder_show == 'yes' or block.settings.preorder_show == 'on_backordered' and product.selected_or_first_available_variant.inventory_policy == 'continue' and product.selected_or_first_available_variant.inventory_quantity < 1 and product.selected_or_first_available_variant.inventory_management != null
        assign can_show_preorder = true
      endif
    endif
    if block.type == 'sticky_add_to_cart'
      assign sticky_atc = true
    endif
    if block.type == 'customize_picker'
      if block.settings.required
        case block.settings.picker_type
          when 'single_text'
            assign customize_picker_required = true
          when 'multi_text'
            assign customize_picker_required = true
          when 'date'
            assign customize_picker_required = true
          when 'time'
            assign customize_picker_required = true
          when 'file_upload'
            assign customize_picker_required = true
            assign type_file_upload = true
        endcase
      endif
      if block.settings.picker_type == 'checkbox' and block.settings.minimum_select_value > 0
        assign customize_picker_required = true
      endif
    endif
  endfor

  if settings.lang_direction contains request.locale.iso_code
    assign class_rtl = 'rtl'
  else
    assign class_rtl = 'ltr'
  endif

  if section.settings.make_content_center
    assign show_content_center = true
  else
    assign show_content_center = false
  endif

  assign show_media_with_variant_selected = false
  if section.settings.option_to_classify_variant_media != blank and section.settings.show_media_with_variant_selected and product.has_only_default_variant == false
    for option in product.options_with_values
      if section.settings.option_to_classify_variant_media contains option.name and show_media_with_variant_selected == false
        assign media_with_option = option.name
        assign show_media_with_variant_selected = true
      endif
    endfor
  endif
-%}
{%- capture dataForCustomerEvent -%}
  {
    "product": {
      "id": {{ product.id | default: 0 }},
      "selected_variant_id": {{ product.selected_or_first_available_variant.id | default: 0 }},
      "has_only_default_variant": {{ product.has_only_default_variant }},
      "title": "{{ product.title | escape }}",
      "variant_title": "{{ product.selected_or_first_available_variant.title | escape }}",
      "sku": "{{ product.selected_or_first_available_variant.sku }}",
      "currencyCode": "{{ cart.currency.iso_code }}",
      "price": {{ product.selected_or_first_available_variant.price | default: 0 }},
      "vendor": "{{ product.vendor | escape }}",
      "category": "{{ collection.title | default: '' | escape }}"
    }
  }
{%- endcapture %}

{% render 'section-divider' %}
{% assign price_squared = product.price | divided_by: box_area | round: 2 %}
{% assign price_squared = price_squared | money %}
{% assign box_area = product.metafields.my_fields.box_area %}
{% assign box_area_clean = box_area | remove: " sq. ft." %}
{% assign tiles_per_box = product.metafields.my_fields.tiles_per_box %}
{% assign tile_size = box_area_clean | times: 1.0 | divided_by: tiles_per_box | round: 4 %}
        
  {% if product.variants.first.inventory_quantity > 0 and product.variants.first.inventory_management == 'shopify' %}
    {% assign max_qty = product.variants.first.inventory_quantity %}
    <script>
      console.log('available: {{ max_qty }}');
    </script>
  {% else %}
    {% assign max_qty = 10000 %}
    <script>
      console.log('available: {{ max_qty }}');
    </script>
  {% endif %}
        
<div
  id="x-product-template-{{ product.id }}-{{ section.id }}"
  class="x-product-{{ section.id }} w-full relative{% unless full_width and product != blank %} content-{{ section.id }}{% endunless %}"
  x-data="{ showStickyATC: false }"
  {% if product != blank %}
    x-intersect.once='$store.xProductRecently.setProduct("{{ product.id }}")'
  {% endif %}
>
  <div
    class="ltr flex relative flex-wrap{% if mobile_media_full %} full-width-mobile{% endif %}{% unless full_width or full_width_main_page %} page-width{% else %}{% unless featured_product %} full-width{% endunless %}{% endunless %}{% if section.settings.desktop_layout == "right" %} flex-row-reverse{% endif %} pb-[{{ section.settings.padding_bottom_mobile }}px] pt-[{{ section.settings.padding_top_mobile }}px] md:pb-[{{ section.settings.padding_bottom }}px] md:pt-[{{ section.settings.padding_top }}px]"
    {%- if product != blank -%}
      x-intersect.once='$store.xCustomerEvent.fire("product_viewed_custom", $el)'
      x-customer-event-data="{{ dataForCustomerEvent | escape }}"
    {%- endif -%}
  >
    {%- if product != blank -%}
      <div class="w-full relative quick-view:md:pb-0 quick-view:md:w-[45%] md:w-1/2 pb-7 md:pb-0{% if full_width %}{% unless mobile_media_full %} pr-5 pl-5{% endunless %} md:pl-12 md:pr-12 lg:pl-[84px] lg:pr-[84px]{% else %}{% if section.settings.desktop_layout == "right" %}{% if spacing_col == 'small' %} product-page:md:pl-5 product-page:lg:pl-8{% endif %} quick-view:md:pl-6 quick-view:md:pr-0{% else %}{% if spacing_col == 'small' %} product-page:md:pr-5 product-page:lg:pr-8{% endif %} quick-view:md:pr-6 quick-view:md:pl-0{% endif %}{% endif %}">
        {% assign media_with_option_handle = media_with_option | handle %}
        {%- render 'product-media-gallery',
          product: product,
          enable_sticky_image: enable_sticky_image,
          media_layout: media_layout,
          show_thumbnail_desktop: show_thumbnail_desktop,
          show_arrow_button: show_arrow_button,
          show_thumbnail_mobile: show_thumbnail_mobile,
          quick_view: quick_view,
          lazy_load: lazy_load,
          rounded_corner_image: rounded_corner_image,
          mobile_media_full: mobile_media_full,
          show_media_with_variant_selected: show_media_with_variant_selected,
          media_with_option: media_with_option_handle,
          show_first_image_avaiable: show_first_image_avaiable
        -%}
      </div>
      <div
        class="w-full relative quick-view:md:w-[55%] md:w-1/2{% if mobile_media_full %} pr-5 pl-5{% endif %}{% if full_width %} pl-5 pr-5 md:pr-0 md:pl-0{% else %} md:pl-0 md:pr-0{% endif %}{% if section.settings.desktop_layout == "right" %} flex product-page:md:justify-end{% endif %}{% if featured_product and full_width %} content-{{ section.id }} pt-8 pb-12 {{ class_padding_light }} {{ class_padding_dark }}{% else %} pt-3 md:pt-0 pb-0{% endif %}"
        {%- if section.settings.desktop_layout == 'right' -%}
          tabindex="0"
        {%- endif -%}
      >
        {%- if featured_product and full_width -%}
          <div
            class="content-{{ section.id }} hidden md:block absolute -z-10 top-0 bottom-0{% if section.settings.desktop_layout == "left" %} right-0{% else %} left-0{% endif %}"
          ></div>
        {%- endif -%}
        <div
          id="ProductInfo-{{ section.id }}"
          class="parent-element {% if settings.lang_direction contains request.locale.iso_code %}rtl {% endif %} product-info w-full pb-1{% if enable_sticky_image %} sticky top-20{% endif %}{% if section.settings.desktop_layout == "left" %} lg:pl-0 md:pr-5 2xl:pr-0 quick-view:md:pl-6 {% if spacing_col == 'small' %} product-page:md:pl-5 product-page:lg:pl-8{% else %} product-page:md:pl-12 product-page:lg:pl-[84px]{% endif %}{% if full_width %} lg:pr-5{% endif %}{% else %} lg:pr-0 md:pl-5 2xl:pl-0 quick-view:md:pr-6{% if spacing_col == 'small' %} product-page:md:pr-5 product-page:lg:pr-8{% else %} product-page:md:pr-12 product-page:lg:pr-[84px]{% endif %}{% if full_width %} lg:pl-5{% endif %}{% endif %} max-w-[{{ settings.page_width | divided_by: 2 | plus: 20 }}px]"
        >
          <div class="flex gap-x-2.5 flex-wrap">
            {%- if section.settings.show_vendor -%}
              <p class="{% if show_content_center %}text-center{% endif %} w-full mb-1 italic p-break-words">
                {{ product.vendor | escape }}
              </p>
            {%- endif -%}
            {%- if product.title != blank and section.settings.show_product_name -%}
              <{{ section.settings.heading_tag }} class="w-full {% if show_content_center %}text-center{% endif %} product-title h2 mb-3 leading-tight title-size--{{ section.id }}">
                {{- product.title | escape -}}
              </{{ section.settings.heading_tag }}>
            {%- endif -%}
            {%- for block in section.blocks -%}
              {%- case block.type -%}
                {%- when '@app' -%}
                  {% render block %}

                {% when 'calculator' %}
                  <style>
                    .product-grid-item,
                    .product-meta--review {
                      .spr-badge[data-rating="0.0"] {
                        display: none;
                      }
                    }

                    .calculator_wrapper {
                      display: flex;
                      flex-direction: row;
                      justify-content: flex-start;
                      margin-bottom: 10px;
                    }

                    .input_boxes {
                      text-align: center;
                      border: 1px solid #f5f5f5;
                      width: 100%;
                      max-width: 148px;
                    }

                    .input_boxes input {
                        margin-bottom: 0;
                        border: none;
                        text-align: center;
                        padding: 0px!important;
                        padding-top: 5px!important;
                    }

                    .calculator_container {
                      margin-bottom: 20px;
                      width:100%;
                    }

                    .open_calc_pop_up {
                      font-size: 12px;
                      font-weight: 600;
                      cursor: pointer;
                    }

                    .container_titles {
                        font-weight: 600;
                    }

                    .js-qty{
                      margin-bottom: 0;
                    }

                    /* Accordion styles replacing popup styles */
                    .calc_accordion {
                      display: none;
                      width: 100%;
                      margin-top: 20px;
                      border: 1px solid #163155;
                      border-radius: 8px;
                      overflow: hidden;
                      transition: all 0.3s ease;
                    }

                    .calc_accordion.calc_accordion-open {
                      display: block;
                      animation: slideDown 0.3s ease-out;
                    }

                    @keyframes slideDown {
                      from {
                        opacity: 0;
                        max-height: 0;
                        transform: translateY(-10px);
                      }
                      to {
                        opacity: 1;
                        max-height: 1000px;
                        transform: translateY(0);
                      }
                    }

                    .tile-calculator-wrapper {
                      background: #fff;
                      padding: 20px;
                      position: relative;
                      border: none;
                      max-height: none;
                      margin: 0;
                    }

                    .accordion-close {
                      position: absolute;
                      right: 15px;
                      top: 15px;
                      padding: 8px;
                      font-weight: bold;
                      cursor: pointer;
                      background: none;
                      border: none;
                      font-size: 20px;
                      color: #666;
                      width: 32px;
                      height: 32px;
                      display: flex;
                      align-items: center;
                      justify-content: center;
                      border-radius: 50%;
                      transition: all 0.2s ease;
                    }

                    .accordion-close:hover {
                      background: #f5f5f5;
                      color: #333;
                    }

                    /* New styles for wireframe calculator */
                    .calc-header h3 { font-size: 18px; font-weight: 600; color: #143055; margin: 0 0 25px 0; text-align: center; }
                    .calc-inputs { padding: 20px 0; }
                    .input-row label, .dimension-group label, .overage-label { display: block; font-size: 14px; font-weight: 500; color: #333; margin-bottom: 8px; }
                    .input-group { display: flex; align-items: center; background: #f8f9fa; border: 1px solid #ddd; border-radius: 6px; padding: 12px; gap: 8px; margin-bottom: 20px; }
                    .input-group.small { padding: 8px; max-width: 80px; margin-bottom: 0; }
                    .main-input, .dimension-input { border: none; background: transparent; font-size: 16px; font-weight: 500; color: #333; text-align: center; outline: none; flex: 1; }
                    .input-unit { font-size: 14px; color: #666; font-weight: 500; }
                    .or-divider { text-align: center; margin: 25px 0; position: relative; }
                    .or-divider:before { content: ''; position: absolute; top: 50%; left: 0; right: 0; height: 1px; background: #ddd; }
                    .or-divider span { background: #fff; padding: 0 15px; color: #666; font-weight: 500; position: relative; }
                    .dimensions-row { display: flex; gap: 20px; margin-bottom: 25px; }
                    .dimension-group { flex: 1; }
                    .dimension-inputs { display: flex; gap: 10px; }
                    .overage-options { display: flex; gap: 12px; margin-bottom: 12px; }
                    .overage-option { cursor: pointer; margin: 0; }
                    .overage-option input[type="radio"] { display: none; }
                    .overage-btn { display: inline-block; padding: 8px 16px; border: 2px solid #ddd; border-radius: 6px; background: #fff; color: #333; font-weight: 500; transition: all 0.2s ease; }
                    .overage-option input[type="radio"]:checked + .overage-btn { background: #143055; color: #fff; border-color: #143055; }
                    .overage-note { font-size: 12px; color: #666; margin: 8px 0 0 0; font-style: italic; }
                    #manual-overage-input input { width: 80px; padding: 8px; border: 1px solid #ddd; border-radius: 4px; text-align: center; margin-right: 5px; }
                    .calculate-button { width: 100%; background: #143055; color: #fff; border: none; padding: 14px 20px; font-size: 16px; font-weight: 600; border-radius: 6px; cursor: pointer; transition: background 0.2s ease; }
                    .calculate-button:hover { background: #0f2744; }
                    .calc-results { margin-top: 30px; padding: 20px; background: #f8f9fa; border-radius: 8px; border: 1px solid #e9ecef; }
                    .result-item { display: flex; justify-content: space-between; align-items: center; padding: 8px 0; border-bottom: 1px solid #e9ecef; }
                    .result-item:last-child { border-bottom: none; font-weight: 600; }
                    .result-label { font-size: 14px; color: #333; }
                    .result-value { font-size: 14px; font-weight: 500; color: #143055; }
                    .add-to-cart-button { width: 100%; background: #28a745; color: #fff; border: none; padding: 14px 20px; font-size: 16px; font-weight: 600; border-radius: 6px; cursor: pointer; transition: background 0.2s ease; margin-top: 20px; }
                    .add-to-cart-button:hover { background: #218838; }

                    .input-box {
                    }
                  </style>
                  
                  {% if product.tags contains 'Tile_calculator' %}
                    <div class="calculator_container">
                      <span class="calc_title">Quantity <a class="open_calc_pop_up">How much do I need?</a></span>
                      <div class="calculator_wrapper">
                        <div id="squared_size_wrapper" class="squared_size input_boxes">
                          <input type="text" class="squared_size" id="squared_size" placeholder="0" value="{{ box_area_clean }}">
                          <label class="container_titles">SQ. FT</label>
                        </div>
                        <div class="number_boxes input_boxes">
                          <input style="display:inline-block;" type="text" id="quantity_look_alike" value="1" min="1" class="quantity-selector-fake">
                          <label class="container_titles box-label">Boxes</label>
                        </div>
                        <div style="display: none;" class="number_boxes input_boxes">
                          <input style="display:inline-block;" type="number" id="quantity" name="quantity" value="1" min="1" class="quantity-selector">
                          <label class="container_titles box-label"></label>
                        </div>
                        <div id="squared_size_wrapper" class="squared_size input_boxes">
                          <span id="product_page_total" class="squared_size product_page_total">${{ product.price | divided_by: 100.00 }}</span>
                          <label class="container_titles">Total Price</label>
                        </div>
                      </div>
                    </div>

                    <div class="calc_accordion">
                      <div id="tile-calculator" class="tile-calculator-wrapper" style="display: block;">
                        <div class="productInfo-popup-close">
                            <svg viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="#000000">
                            <g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><line x1="16" y1="16" x2="48" y2="48"></line><line x1="48" y1="16" x2="16" y2="48"></line></g>
                            </svg>
                        </div>
                        
                        <div class="calc-header">
                          <h3>Calculate how many tiles you need:</h3>
                        </div>

                        <div class="calc-inputs">
                          <!-- Single Square Footage Input -->
                          <div class="input-row">
                            <label for="calculator-footage-main">Enter total square feet:</label>
                            <div class="input-group">
                              <input type="text" id="calculator-footage-main" placeholder="0" class="main-input">
                              <span class="input-unit">sq ft</span>
                            </div>
                          </div>

                          <!-- OR Divider -->
                          <div class="or-divider">
                            <span>OR</span>
                          </div>

                          <!-- Length and Width Inputs -->
                          <div class="dimensions-row">
                            <div class="dimension-group">
                              <label>Length:</label>
                              <div class="dimension-inputs">
                                <div class="input-group small">
                                  <input type="text" id="calculator-length-ft-main" placeholder="0" class="dimension-input">
                                  <span class="input-unit">ft</span>
                                </div>
                                <div class="input-group small">
                                  <input type="text" id="calculator-length-in-main" placeholder="0" class="dimension-input">
                                  <span class="input-unit">in</span>
                                </div>
                              </div>
                            </div>
                            <div class="dimension-group">
                              <label>Width:</label>
                              <div class="dimension-inputs">
                                <div class="input-group small">
                                  <input type="text" id="calculator-width-ft-main" placeholder="0" class="dimension-input">
                                  <span class="input-unit">ft</span>
                                </div>
                                <div class="input-group small">
                                  <input type="text" id="calculator-width-in-main" placeholder="0" class="dimension-input">
                                  <span class="input-unit">in</span>
                                </div>
                              </div>
                            </div>
                          </div>

                          <!-- Overage Selection -->
                          <div class="overage-section">
                            <label class="overage-label">Select overage (%):</label>
                            <div class="overage-options">
                              <label class="overage-option">
                                <input type="radio" name="overage-main" value="0.15" checked>
                                <span class="overage-btn">15%</span>
                              </label>
                              <label class="overage-option">
                                <input type="radio" name="overage-main" value="0.10">
                                <span class="overage-btn">10%</span>
                              </label>
                              <label class="overage-option">
                                <input type="radio" name="overage-main" value="manual">
                                <span class="overage-btn">Custom</span>
                              </label>
                            </div>
                            <div id="manual-overage-input" style="display: none;">
                              <input type="number" id="manual-overage-value" placeholder="Enter %" min="0" max="100">
                              <span>%</span>
                            </div>
                            <p class="overage-note">(15% recommended for straight-lay)</p>
                          </div>

                          <!-- Calculate Button -->
                          <button type="button" id="calculate-main" class="calculate-button">CALCULATE</button>
                        </div>

                        <!-- Results Section (Hidden initially) -->
                        <div class="calc-results" id="calc-results" style="display: none;">
                          <div class="results-grid">
                            <div class="result-item">
                              <span class="result-label">Subtotal:</span>
                              <span class="result-value" id="result-subtotal">0 sq ft</span>
                            </div>
                            <div class="result-item">
                              <span class="result-label">Overage:</span>
                              <span class="result-value" id="result-overage">0 sq ft (15%)</span>
                            </div>
                            <div class="result-item">
                              <span class="result-label">Total:</span>
                              <span class="result-value" id="result-total">0 sq ft</span>
                            </div>
                            <div class="result-item">
                              <span class="result-label">Boxes needed:</span>
                              <span class="result-value" id="result-boxes">0 ÷ {{ box_area_clean }} sq ft/box = 0</span>
                            </div>
                            <div class="result-item">
                              <span class="result-label">Total cost:</span>
                              <span class="result-value" id="result-cost">0 × ${{ product.price | divided_by: 100.00 }} = $0.00</span>
                            </div>
                          </div>
                          
                          <button type="button" id="add-to-cart-calc" class="add-to-cart-button">Add to cart</button>
                        </div>
                      </div>
                    </div>

                    <script>
                      var output_boxes = 0;
                      var tile_size = {{tile_size}};
                      var tiles_per_box = {{tiles_per_box}};
                      var box_dimensions = {{ box_area_clean }};
                      var product_price = {{ product.price | divided_by: 100.00 }};

                      // Accordion functionality
                      $(".calc_accordion").click(function(event) {
                        event.stopPropagation();
                      });
                      
                      $(".productInfo-popup-close").click(function(event) {
                        $(".calc_accordion").removeClass("calc_accordion-open");
                      });
                      
                      $(".open_calc_pop_up").click(function(){
                        $(".calc_accordion").toggleClass("calc_accordion-open");
                      });

                      // Manual overage input toggle
                      $('input[name="overage-main"]').change(function() {
                        if ($(this).val() === 'manual') {
                          $('#manual-overage-input').show();
                        } else {
                          $('#manual-overage-input').hide();
                        }
                      });

                      // Main calculation function
                      function calculateWireframe() {
                        var subtotal = 0;
                        var footage = parseFloat($('#calculator-footage-main').val()) || 0;
                        
                        // If no square footage, calculate from dimensions
                        if (footage === 0) {
                          var lengthFt = parseFloat($('#calculator-length-ft-main').val()) || 0;
                          var lengthIn = parseFloat($('#calculator-length-in-main').val()) || 0;
                          var widthFt = parseFloat($('#calculator-width-ft-main').val()) || 0;
                          var widthIn = parseFloat($('#calculator-width-in-main').val()) || 0;
                          
                          var totalLength = lengthFt + (lengthIn / 12);
                          var totalWidth = widthFt + (widthIn / 12);
                          footage = totalLength * totalWidth;
                        }

                        if (footage <= 0) {
                          alert('Please enter either square footage or room dimensions');
                          return;
                        }

                        subtotal = footage;

                        // Get overage
                        var overage = 0;
                        var selectedOverage = $('input[name="overage-main"]:checked').val();
                        if (selectedOverage === 'manual') {
                          overage = parseFloat($('#manual-overage-value').val()) / 100 || 0;
                        } else {
                          overage = parseFloat(selectedOverage) || 0;
                        }

                        var overageAmount = subtotal * overage;
                        var total = subtotal + overageAmount;
                        
                        // Calculate boxes
                        var boxesNeeded = Math.ceil(total / box_dimensions);
                        output_boxes = boxesNeeded;
                        
                        // Calculate cost
                        var totalCost = boxesNeeded * product_price;

                        // Update display
                        $('#result-subtotal').text(subtotal.toFixed(1) + ' sq ft');
                        $('#result-overage').text(overageAmount.toFixed(1) + ' sq ft (' + Math.round(overage * 100) + '%)');
                        $('#result-total').text(total.toFixed(1) + ' sq ft');
                        $('#result-boxes').text(total.toFixed(1) + ' ÷ ' + box_dimensions + ' sq ft/box = ' + (total / box_dimensions).toFixed(1) + ' → rounded up = ' + boxesNeeded);
                        $('#result-cost').text(boxesNeeded + ' × $' + product_price.toFixed(2) + ' = $' + totalCost.toFixed(2));

                        // Update main quantity inputs
                        $('#quantity_look_alike').val(boxesNeeded);
                        $('#quantity').val(boxesNeeded);
                        $('#squared_size').val(total.toFixed(1));
                        $('#product_page_total').text('$' + totalCost.toFixed(2));

                        // Show results
                        $('#calc-results').show();
                      }

                      // Calculate button click
                      $('#calculate-main').click(calculateWireframe);

                      // Add to cart functionality
                      $('#add-to-cart-calc').click(function() {
                        if (output_boxes > 0) {
                          $('.calc_accordion').removeClass('calc_accordion-open');
                          $('#x-atc-button-{{ section.id }}').click();
                        }
                      });
                    </script>
                  {% endif %}
              {%- endcase -%}
            {%- endfor -%}
          </div>
        </div>
      </div>
    {%- endif -%}
  </div>
</div>
