{%- comment -%}
  This file has been modified by the Yoast SEO for Shopify app.
  You can learn more about this (and learn how to cleanly revert these changes) at https://yoa.st/removing-theme-changes.
{%- endcomment -%}
{% comment %}
  Renders product detail

  Accepts:
  - product: {Object} Product Liquid object (optional)
  - is_product_page: {Boolean} is main-product section. Default: false (optional)
  - lazy_load: {Boolean} Image should be lazy loaded. Default: true (optional)
  - enable_sticky_image: {Boolean} Sticky content when scroll down. Default: true (optional)
  - full_width: {Boolean} Visible full width
  - media_layout: {String} Product media layout type. Values are 'thumbnail_slider', 'stacked', '2_columns'
  - show_thumbnail_desktop: {Boolean} Show thumnail on desktop
  - show_thumbnail_mobile: {Boolean} Show thumnail on mobile
  - show_arrow_button: {Boolean} Show next/previous slider on desktop
  - mobile_media_full: {Boolean} Is media visible full with in mobile
  - featured_product: {Boolean} Is Featured product
  - quick-view: {Boolean} is Quick view
  Usage:
  {% render 'product-template', lazy_load: false %}
{% endcomment %}

{%- liquid

  assign btn_addtocart = false
  assign blocktype = section.blocks | map: 'type' | uniq
  if blocktype contains 'buy_buttons'
    assign btn_addtocart = true
  endif

  assign unavailable_text = 'products.product.unavailable' | t
  assign product_form_id = 'product-form-' | append: section.id

  assign rounded_corner_image = false
  if settings.edges_type == 'rounded_corners'
    assign rounded_corner_image = true
  endif
  assign customize_picker_required = false
  assign type_file_upload = false
  for block in section.blocks
    if block.type == 'buy_buttons'
      if block.settings.preorder_show == 'yes' or block.settings.preorder_show == 'on_backordered' and product.selected_or_first_available_variant.inventory_policy == 'continue' and product.selected_or_first_available_variant.inventory_quantity < 1 and product.selected_or_first_available_variant.inventory_management != null
        assign can_show_preorder = true
      endif
    endif
    if block.type == 'sticky_add_to_cart'
      assign sticky_atc = true
    endif
    if block.type == 'customize_picker'
      if block.settings.required
        case block.settings.picker_type
          when 'single_text'
            assign customize_picker_required = true
          when 'multi_text'
            assign customize_picker_required = true
          when 'date'
            assign customize_picker_required = true
          when 'time'
            assign customize_picker_required = true
          when 'file_upload'
            assign customize_picker_required = true
            assign type_file_upload = true
        endcase
      endif
      if block.settings.picker_type == 'checkbox' and block.settings.minimum_select_value > 0
        assign customize_picker_required = true
      endif
    endif
  endfor

  if settings.lang_direction contains request.locale.iso_code
    assign class_rtl = 'rtl'
  else
    assign class_rtl = 'ltr'
  endif

  if section.settings.make_content_center
    assign show_content_center = true
  else
    assign show_content_center = false
  endif

  assign show_media_with_variant_selected = false
  if section.settings.option_to_classify_variant_media != blank and section.settings.show_media_with_variant_selected and product.has_only_default_variant == false
    for option in product.options_with_values
      if section.settings.option_to_classify_variant_media contains option.name and show_media_with_variant_selected == false
        assign media_with_option = option.name
        assign show_media_with_variant_selected = true
      endif
    endfor
  endif
-%}
{%- capture dataForCustomerEvent -%}
  {
    "product": {
      "id": {{ product.id | default: 0 }},
      "selected_variant_id": {{ product.selected_or_first_available_variant.id | default: 0 }},
      "has_only_default_variant": {{ product.has_only_default_variant }},
      "title": "{{ product.title | escape }}",
      "variant_title": "{{ product.selected_or_first_available_variant.title | escape }}",
      "sku": "{{ product.selected_or_first_available_variant.sku }}",
      "currencyCode": "{{ cart.currency.iso_code }}",
      "price": {{ product.selected_or_first_available_variant.price | default: 0 }},
      "vendor": "{{ product.vendor | escape }}",
      "category": "{{ collection.title | default: '' | escape }}"
    }
  }
{%- endcapture %}

{% render 'section-divider' %}
{% assign price_squared = product.price | divided_by: box_area | round: 2 %}
{% assign price_squared = price_squared | money %}
{% assign box_area = product.metafields.my_fields.box_area %}
{% assign box_area_clean = box_area | remove: " sq. ft." %}
{% assign tiles_per_box = product.metafields.my_fields.tiles_per_box %}
{% assign tile_size = box_area_clean | times: 1.0 | divided_by: tiles_per_box | round: 4 %}
        
  {% if product.variants.first.inventory_quantity > 0 and product.variants.first.inventory_management == 'shopify' %}
    {% assign max_qty = product.variants.first.inventory_quantity %}
    <script>
      console.log('available: {{ max_qty }}');
    </script>
  {% else %}
    {% assign max_qty = 10000 %}
    <script>
      console.log('available: {{ max_qty }}');
    </script>
  {% endif %}
        
<div
  id="x-product-template-{{ product.id }}-{{ section.id }}"
  class="x-product-{{ section.id }} w-full relative{% unless full_width and product != blank %} content-{{ section.id }}{% endunless %}"
  x-data="{ showStickyATC: false }"
  {% if product != blank %}
    x-intersect.once='$store.xProductRecently.setProduct("{{ product.id }}")'
  {% endif %}
>
  <div
    class="ltr flex relative flex-wrap{% if mobile_media_full %} full-width-mobile{% endif %}{% unless full_width or full_width_main_page %} page-width{% else %}{% unless featured_product %} full-width{% endunless %}{% endunless %}{% if section.settings.desktop_layout == "right" %} flex-row-reverse{% endif %} pb-[{{ section.settings.padding_bottom_mobile }}px] pt-[{{ section.settings.padding_top_mobile }}px] md:pb-[{{ section.settings.padding_bottom }}px] md:pt-[{{ section.settings.padding_top }}px]"
    {%- if product != blank -%}
      x-intersect.once='$store.xCustomerEvent.fire("product_viewed_custom", $el)'
      x-customer-event-data="{{ dataForCustomerEvent | escape }}"
    {%- endif -%}
  >
    {%- if product != blank -%}
      <div class="w-full relative quick-view:md:pb-0 quick-view:md:w-[45%] md:w-1/2 pb-7 md:pb-0{% if full_width %}{% unless mobile_media_full %} pr-5 pl-5{% endunless %} md:pl-12 md:pr-12 lg:pl-[84px] lg:pr-[84px]{% else %}{% if section.settings.desktop_layout == "right" %}{% if spacing_col == 'small' %} product-page:md:pl-5 product-page:lg:pl-8{% endif %} quick-view:md:pl-6 quick-view:md:pr-0{% else %}{% if spacing_col == 'small' %} product-page:md:pr-5 product-page:lg:pr-8{% endif %} quick-view:md:pr-6 quick-view:md:pl-0{% endif %}{% endif %}">
        {% assign media_with_option_handle = media_with_option | handle %}
        {%- render 'product-media-gallery',
          product: product,
          enable_sticky_image: enable_sticky_image,
          media_layout: media_layout,
          show_thumbnail_desktop: show_thumbnail_desktop,
          show_arrow_button: show_arrow_button,
          show_thumbnail_mobile: show_thumbnail_mobile,
          quick_view: quick_view,
          lazy_load: lazy_load,
          rounded_corner_image: rounded_corner_image,
          mobile_media_full: mobile_media_full,
          show_media_with_variant_selected: show_media_with_variant_selected,
          media_with_option: media_with_option_handle,
          show_first_image_avaiable: show_first_image_avaiable
        -%}
      </div>
      <div
        class="w-full relative quick-view:md:w-[55%] md:w-1/2{% if mobile_media_full %} pr-5 pl-5{% endif %}{% if full_width %} pl-5 pr-5 md:pr-0 md:pl-0{% else %} md:pl-0 md:pr-0{% endif %}{% if section.settings.desktop_layout == "right" %} flex product-page:md:justify-end{% endif %}{% if featured_product and full_width %} content-{{ section.id }} pt-8 pb-12 {{ class_padding_light }} {{ class_padding_dark }}{% else %} pt-3 md:pt-0 pb-0{% endif %}"
        {%- if section.settings.desktop_layout == 'right' -%}
          tabindex="0"
        {%- endif -%}
      >
        {%- if featured_product and full_width -%}
          <div
            class="content-{{ section.id }} hidden md:block absolute -z-10 top-0 bottom-0{% if section.settings.desktop_layout == "left" %} right-0{% else %} left-0{% endif %}"
          ></div>
        {%- endif -%}
        <div
          id="ProductInfo-{{ section.id }}"
          class="parent-element {% if settings.lang_direction contains request.locale.iso_code %}rtl {% endif %} product-info w-full pb-1{% if enable_sticky_image %} sticky top-20{% endif %}{% if section.settings.desktop_layout == "left" %} lg:pl-0 md:pr-5 2xl:pr-0 quick-view:md:pl-6 {% if spacing_col == 'small' %} product-page:md:pl-5 product-page:lg:pl-8{% else %} product-page:md:pl-12 product-page:lg:pl-[84px]{% endif %}{% if full_width %} lg:pr-5{% endif %}{% else %} lg:pr-0 md:pl-5 2xl:pl-0 quick-view:md:pr-6{% if spacing_col == 'small' %} product-page:md:pr-5 product-page:lg:pr-8{% else %} product-page:md:pr-12 product-page:lg:pr-[84px]{% endif %}{% if full_width %} lg:pl-5{% endif %}{% endif %} max-w-[{{ settings.page_width | divided_by: 2 | plus: 20 }}px]"
        >
          <div class="flex gap-x-2.5 flex-wrap">
            {%- if section.settings.show_vendor -%}
              <p class="{% if show_content_center %}text-center{% endif %} w-full mb-1 italic p-break-words">
                {{ product.vendor | escape }}
              </p>
            {%- endif -%}
            {%- if product.title != blank and section.settings.show_product_name -%}
              <{{ section.settings.heading_tag }} class="w-full {% if show_content_center %}text-center{% endif %} product-title h2 mb-3 leading-tight title-size--{{ section.id }}">
                {{- product.title | escape -}}
              </{{ section.settings.heading_tag }}>
            {%- endif -%}
            {%- for block in section.blocks -%}
              {%- case block.type -%}
                {%- when '@app' -%}
                  {% render block %}

                {% when 'calculator' %}
                  <style>
                    .product-grid-item,
                    .product-meta--review {
                      .spr-badge[data-rating="0.0"] {
                        display: none;
                      }
                    }

                    .calculator_wrapper {
                      display: flex;
                      flex-direction: row;
                      justify-content: flex-start;
                      margin-bottom: 10px;
                    }

                    .input_boxes {
                      text-align: center;
                      border: 1px solid #f5f5f5;
                      width: 100%;
                      max-width: 148px;
                    }

                    .input_boxes input {
                        margin-bottom: 0;
                        border: none;
                        text-align: center;
                        padding: 0px!important;
                        padding-top: 5px!important;
                    }

                    .calculator_container {
                      margin-bottom: 20px;
                      width:100%;
                    }

                    .open_calc_pop_up {
                      font-size: 12px;
                      font-weight: 600;
                      cursor: pointer;
                    }

                    .container_titles {
                        font-weight: 600;
                    }

                    .js-qty{
                      margin-bottom: 0;
                    }

                    .calc_pop_up {
                      position: fixed;
                      top: 0;
                      left: 0;
                      width: 100%;
                      background: rgba(0, 0, 0, 0.4);
                      height: 100%;
                      display: none;
                      flex-direction: row;
                      align-items: center;
                      backdrop-filter: blur(10px);
                      justify-content: center;
                      transition: 0.4s;
                      z-index: 999;
                      padding: 20px;
                    }

                    .tile-calculator-wrapper {
                      background: #fff;
                      position: relative;
                      overflow-y: auto;
                      max-height: 85vh;
                      width: 100%;
                      max-width: 420px;
                      border-radius: 16px;
                      box-shadow: 0 4px 24px rgba(0, 0, 0, 0.12);
                      margin: 0 auto;
                      padding-bottom: 0;
                    }

                    .close_calc_pop_up,
                    .productInfo-popup-close {
                        width: 32px;
                        height: 32px;
                        background-color: rgba(255, 255, 255, 0.2);
                        border-radius: 50%;
                        position: absolute;
                        right: 12px;
                        top: 12px;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        cursor: pointer;
                        transition: background-color 0.2s;
                        z-index: 10;
                    }
                    .close_calc_pop_up:hover,
                    .productInfo-popup-close:hover {
                        background-color: rgba(255, 255, 255, 0.3);
                    }
                    .close_calc_pop_up svg,
                    .productInfo-popup-close svg {
                        width: 16px;
                        height: 16px;
                        stroke: #fff;
                        stroke-width: 2px;
                    }

                    .calc_pop_up-open {
                      display: flex;
                    }

                    /* Header Section */
                    .tile-calculator-wrapper .heading {
                        background: #0066CC;
                        padding: 16px 20px;
                        border-radius: 16px 16px 0 0;
                        text-align: center;
                        position: relative;
                        font-size: 20px;
                        font-weight: bold;
                        color: #fff;
                        margin: 0;
                    }

                    /* Content Sections */
                    .calculator-section {
                        padding: 16px 20px;
                        border-bottom: 1px solid #e5e7eb;
                    }
                    .calculator-section:last-child {
                        border-bottom: none;
                        padding-bottom: 20px;
                    }

                    .section-intro {
                        text-align: center;
                        margin-bottom: 16px;
                    }
                    .section-intro h4 {
                        font-size: 16px;
                        font-weight: 700;
                        color: #000;
                        margin: 0 0 8px 0;
                        line-height: 1.3;
                    }
                    .section-intro p {
                        font-size: 14px;
                        color: #6b7280;
                        margin: 0;
                        font-weight: 400;
                    }

                    /* Input Boxes */
                    .input-box {
                        position: relative;
                        width: 100%;
                        text-align: center;
                        border: 2px solid #e5e7eb;
                        border-radius: 12px;
                        background: #fff;
                        margin-bottom: 8px;
                        transition: all 0.2s;
                    }
                    .input-box:focus-within {
                        border-color: #0066CC;
                        box-shadow: 0 0 0 2px rgba(0, 102, 204, 0.1);
                    }

                    .input-box input {
                        width: 100%;
                        text-align: center;
                        border: none;
                        border-radius: 10px;
                        padding: 14px 12px;
                        font-size: 18px;
                        font-weight: 600;
                        background: transparent;
                        outline: none;
                        color: #374151;
                        margin-bottom: 0;
                    }
                    .input-box input::placeholder {
                        color: #9ca3af;
                    }

                    .input-label,
                    .container_titles {
                        display: block;
                        font-size: 14px;
                        color: #6b7280;
                        margin-top: 4px;
                        margin-bottom: 8px;
                        font-weight: 500;
                        text-transform: uppercase;
                        letter-spacing: 0.5px;
                    }

                    /* Flex Box Layout */
                    .flex-box {
                        display: flex;
                        justify-content: space-between;
                        align-items: flex-start;
                        gap: 12px;
                        margin-bottom: 16px;
                    }
                    .flex-box .input-box {
                        flex: 1;
                        margin-bottom: 0;
                    }
                    .box-half {
                        width: 48% !important;
                        flex: none !important;
                    }
                    .full-half {
                        width: 100% !important;
                    }

                    /* Buttons */
                    .calculate_btn {
                        width: 100%;
                        margin: 16px 0 0 0;
                        display: block;
                        text-align: center;
                        background: #0066CC;
                        color: #fff;
                        padding: 12px 16px;
                        font-weight: 600;
                        font-size: 16px;
                        cursor: pointer;
                        border: none;
                        border-radius: 12px;
                        transition: all 0.2s;
                        text-decoration: none;
                        box-shadow: 0 2px 8px rgba(0, 102, 204, 0.3);
                    }
                    .calculate_btn:hover {
                        background: #0052a3;
                        transform: translateY(-1px);
                        box-shadow: 0 4px 12px rgba(0, 102, 204, 0.4);
                        text-decoration: none;
                        color: #fff;
                    }

                    .btn-calculator {
                        width: 100%;
                        background: #0066CC;
                        border: none;
                        padding: 12px 16px;
                        margin: 16px 0;
                        color: #fff;
                        font-weight: 600;
                        font-size: 16px;
                        border-radius: 12px;
                        cursor: pointer;
                        transition: all 0.2s;
                        box-shadow: 0 2px 8px rgba(0, 102, 204, 0.3);
                    }
                    .btn-calculator:hover {
                        background: #0052a3;
                        transform: translateY(-1px);
                        box-shadow: 0 4px 12px rgba(0, 102, 204, 0.4);
                    }

                    /* Overage Selectors */
                    #overage-selectors, 
                    #bottom-overage-selectors {
                        display: grid;
                        grid-template-columns: 1fr 1fr;
                        gap: 8px;
                        margin: 12px 0;
                    }
                    #overage-selectors label,
                    #bottom-overage-selectors label {
                        position: relative;
                        cursor: pointer;
                        margin: 0;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        padding: 10px 12px;
                        border: 2px solid #e5e7eb;
                        border-radius: 12px;
                        background: #fff;
                        color: #000;
                        font-weight: 600;
                        font-size: 15px;
                        transition: all 0.2s;
                        min-height: 44px;
                    }
                    #overage-selectors input[type="radio"],
                    #bottom-overage-selectors input[type="radio"] {
                        position: absolute;
                        opacity: 0;
                        pointer-events: none;
                    }
                    #overage-selectors input[type="radio"]:checked + label,
                    #bottom-overage-selectors input[type="radio"]:checked + label,
                    #overage-selectors label:has(input[type="radio"]:checked),
                    #bottom-overage-selectors label:has(input[type="radio"]:checked) {
                        background: #0066CC !important;
                        color: #fff !important;
                        border-color: #0066CC !important;
                    }
                    #overage-selectors label:hover,
                    #bottom-overage-selectors label:hover {
                        transform: translateY(-1px);
                        box-shadow: 0 2px 8px rgba(0, 102, 204, 0.15);
                    }

                    /* Manual Input Fields */
                    #manualInputField,
                    #manualInputFieldBottom {
                        border: 2px solid #e5e7eb;
                        border-radius: 8px;
                        padding: 8px 12px;
                        width: 80px;
                        margin: 8px auto;
                        text-align: center;
                        font-size: 16px;
                        font-weight: 600;
                        outline: none;
                        background: #fff;
                        display: block;
                    }
                    #manualInputField:focus,
                    #manualInputFieldBottom:focus {
                        border-color: #0066CC;
                        background: #fff;
                    }

                    /* Line Separator */
                    .line-separator {
                        text-align: center;
                        margin: 20px 0;
                        border-bottom: 1px solid #e5e7eb;
                        position: relative;
                    }
                    span.separator {
                        background: #fff;
                        padding: 8px 16px;
                        position: relative;
                        top: 11px;
                        text-transform: uppercase;
                        font-size: 14px;
                        font-weight: 600;
                        color: #6b7280;
                        letter-spacing: 0.5px;
                    }

                    /* Small Text */
                    .small_text {
                        display: block;
                        font-size: 14px;
                        margin: 12px 0 16px 0;
                        color: #0066CC;
                        text-align: center;
                        font-weight: 400;
                        line-height: 1.4;
                    }

                    /* Pricing and Results */
                    .box_price {
                        font-size: 28px;
                        font-weight: 900;
                        color: #000;
                    }
                    .square_price {
                        font-weight: 700;
                        font-size: 18px;
                        color: #000;
                    }
                    .box_area {
                        font-size: 12px;
                        margin-left: 6px;
                        font-weight: 400;
                        color: #6b7280;
                    }
                    .smaller_text {
                        font-size: 13px;
                        font-weight: 400;
                        color: #6b7280;
                    }

                    /* Mobile Responsiveness */
                    @media (max-width: 480px) {
                        .calc_pop_up {
                            padding: 10px;
                        }
                        .tile-calculator-wrapper {
                            max-width: 100%;
                            max-height: 90vh;
                        }
                        .tile-calculator-wrapper .heading {
                            padding: 14px 16px;
                            font-size: 18px;
                        }
                        .calculator-section {
                            padding: 16px 12px;
                        }
                        .section-intro h4 {
                            font-size: 15px;
                        }
                        .section-intro p {
                            font-size: 13px;
                        }
                        .flex-box {
                            flex-direction: column;
                            gap: 8px;
                        }
                        .box-half {
                            width: 100% !important;
                        }
                        #overage-selectors,
                        #bottom-overage-selectors {
                            gap: 6px;
                        }
                        #overage-selectors label,
                        #bottom-overage-selectors label {
                            padding: 8px 10px;
                            font-size: 14px;
                            min-height: 38px;
                        }
                        .calculate_btn,
                        .btn-calculator {
                            padding: 10px 12px;
                            font-size: 15px;
                        }
                    }
                    
                    /* Extra small screens (iPhone SE, etc.) */
                    @media (max-height: 667px) and (max-width: 480px) {
                        .calc_pop_up {
                            padding: 8px;
                        }
                        .tile-calculator-wrapper {
                            max-height: 95vh;
                        }
                        .tile-calculator-wrapper .heading {
                            padding: 12px 16px;
                            font-size: 16px;
                        }
                        .calculator-section {
                            padding: 12px 10px;
                        }
                        .section-intro {
                            margin-bottom: 12px;
                        }
                        .section-intro h4 {
                            font-size: 14px;
                            margin: 0 0 6px 0;
                        }
                        .section-intro p {
                            font-size: 12px;
                        }
                        .input-box input {
                            padding: 12px 10px;
                            font-size: 16px;
                        }
                        .input-label,
                        .container_titles {
                            font-size: 12px;
                            margin-top: 2px;
                            margin-bottom: 6px;
                        }
                        .flex-box {
                            margin-bottom: 12px;
                        }
                        .calculate_btn,
                        .btn-calculator {
                            margin: 12px 0 0 0;
                            padding: 8px 12px;
                            font-size: 14px;
                        }
                        .small_text {
                            font-size: 13px;
                            margin: 8px 0 12px 0;
                        }
                        .line-separator {
                            margin: 16px 0;
                        }
                        span.separator {
                            padding: 6px 12px;
                            font-size: 13px;
                        }
                    }
                  </style>
                  
                  <!-- Additional functionality styles -->
                  <style>
                    .js-qty {
                      margin-bottom: 0;
                    }

                    .tile-measuremts {
                      display: block;
                      font-size: 10px;
                      margin-top: 10px;
                      margin-bottom: 10px;
                    }

                    .tile-measuremts p {
                      margin: 0;
                    }

                    label.quantity-selector {
                      display: none!important;
                    }

                    .input_boxes .js-qty {
                      max-width: 100%;
                    }

                    .input_boxes .js--add,
                    .input_boxes .js--minus{
                      border: none!important;
                    }

                    .calc_prices li {
                      margin: 0;
                    }

                    #overage {
                      width: 100%;
                      max-width: 100%!important;
                      margin-bottom: 5px;
                    }

                    .product-item--price .h1 {
                      display: flex;
                      margin-bottom: 15px;
                      flex-direction: row;
                      flex-wrap: wrap;
                    }

                    .product_page_total {
                      margin-top: 5px;
                      display: block;
                    }

                    #total_square {
                     margin-left: 5px;
                    }

                    #calculator-footage-section,
                    #calculator-dimensions-section{
                      transition: 0.4s;
                    }

                    .opacity_low {
                      opacity: .5;
                    }

                    .tile-calculator-wrapper{
                      scroll-behavior: smooth;
                    }
                    .calculator_wrapper .input_boxes input{
                      width:100%;
                    }
                    .calculator_wrapper .input_boxes input {
                      width: 100%;
                      padding: 10px;
                    }
                    .calculator_wrapper .input_boxes {
                      text-align: center;
                      border: 1px solid #f5f5f5;
                      width: 100%;
                      max-width: 148px;
                      padding: 1px;
                      margin-top: 10px;
                    }
                  </style>
                  {% if product.tags contains 'Tile_calculator' %}
                    <!-- Accordion styles -->
                    <style>
                      .tile-calculator-accordion {
                        margin-top: 15px;
                        border: 2px solid #e5e7eb;
                        border-radius: 16px;
                        overflow: hidden;
                        transition: all 0.4s ease;
                        background: #fff;
                        box-shadow: 0 4px 24px rgba(0, 0, 0, 0.12);
                      }
                      .tile-calculator-accordion.show {
                        display: block !important;
                        animation: slideDown 0.4s ease;
                      }
                      .tile-calculator-accordion.hide {
                        animation: slideUp 0.4s ease;
                      }
                      @keyframes slideDown {
                        from { opacity: 0; transform: translateY(-10px); }
                        to { opacity: 1; transform: translateY(0); }
                      }
                      @keyframes slideUp {
                        from { opacity: 1; transform: translateY(0); }
                        to { opacity: 0; transform: translateY(-10px); }
                      }
                      .open_calc_accordion {
                        color: #0066CC;
                        text-decoration: underline;
                        cursor: pointer;
                        font-weight: 600;
                        transition: color 0.2s;
                      }
                      .open_calc_accordion:hover {
                        color: #0052a3;
                        text-decoration: none;
                      }
                      .tile-calculator-accordion .tile-calculator-wrapper {
                        position: static;
                        overflow: visible;
                        max-height: none;
                        width: 100%;
                        max-width: none;
                        border-radius: 0;
                        box-shadow: none;
                        margin: 0;
                        padding-bottom: 0;
                        background: transparent;
                      }
                    </style>
                    
                    <div class="calculator_container">
                      <span class="calc_title">Quantity <a class="open_calc_pop_up">How much do I need?</a></span>
                      <div class="calculator_wrapper">
                        <div id="squared_size_wrapper" class="squared_size input_boxes">
                          <input type="text" class="squared_size" id="squared_size" placeholder="0" value="{{ box_area_clean }}">
                          <label class="container_titles">SQ. FT</label>
                        </div>
                        <div class="number_boxes input_boxes">
                          <label style="display: none;" for="quantity_look_alike" class="quantity-selector-fake"
                            >Quantity</label
                          >
                          <input
                            style="display:inline-block;"
                            type="text"
                            id="quantity_look_alike"
                            value="1"
                            min="1"
                            class="quantity-selector-fake"
                          >
                          <label style="display:none;" class="quantity-indicator-fake">
                            {% if product.metafields.sheetsqft.sheet_sqft_info != blank %}
                              {{ product.metafields.sheetsqft.sheet_sqft_info }}
                              <style>
                                .js-qty {
                                  display: inline-block;
                                }
                                .quantity-selector, .quantity-indicator {
                                  font-size: 15px;
                                  padding: 0 12px 0 4px;
                                }
                                .calculator_container {
                                  margin-bottom: 20px;
                                  width: 100%;
                                }
                              </style>
                            {% endif %}
                          </label>
                          <label class="container_titles box-label">
                            {% if product.metafields.measuringunitsatd.measuring_units_atd == "Box" %}
                              {{ product.metafields.measuringunitsatd.measuring_units_atd }}es
                            {% elsif product.metafields.measuringunitsatd.measuring_units_atd == "Sheet" %}
                              {{ product.metafields.measuringunitsatd.measuring_units_atd }}s
                            {% elsif product.metafields.measuringunitsatd.measuring_units_atd == "Piece" %}
                              {{ product.metafields.measuringunitsatd.measuring_units_atd }}s
                            {% else %}
                              {{ product.metafields.measuringunitsatd.measuring_units_atd }}
                            {% endif %}
                          </label>
                        </div>
                        <div style="display: none;" class="number_boxes input_boxes">
                          <label style="display: none;" for="quantity" class="quantity-selector">Quantity</label>
                          <input
                            style="display:inline-block;"
                            type="number"
                            id="quantity"
                            name="quantity"
                            value="1"
                            min="1"
                            class="quantity-selector"
                          >
                          <label style="display:none;" class="quantity-indicator">
                            {% if product.metafields.sheetsqft.sheet_sqft_info != blank %}
                              {{ product.metafields.sheetsqft.sheet_sqft_info }}
                              <style>
                                .js-qty {
                                  display: inline-block;
                                }
                                .quantity-selector, .quantity-indicator {
                                  font-size: 15px;
                                  padding: 0 12px 0 4px;
                                }
                              </style>
                            {% endif %}
                          </label>
                          <label class="container_titles box-label">{{ product.metafields.custom.measuring_units_atd }}</label>
                        </div>
                        <div id="squared_size_wrapper" class="squared_size input_boxes">
                          <span id="product_page_total" class="squared_size product_page_total"
                            >${{ product.price | divided_by: 100.00 }}
                          </span>
                          <label class="container_titles">Total Price</label>
                        </div>
                      </div>
                    </div>

                    <div class="calc_pop_up">
                      <div id="tile-calculator" class="tile-calculator-wrapper" style="display: block;">
                      <div class="productInfo-popup-close">
                          <svg viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="#000000">
                          <g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><line x1="16" y1="16" x2="48" y2="48"></line><line x1="48" y1="16" x2="16" y2="48"></line></g>
                          </svg>
                      </div>
                        <div class="heading">
                          <span>Tile Calculator</span>
                        </div>
                        <div class="tile-calculator-container active">
                          <div class="calculator-section footage" id="calculator-footage-section">
                            <div class="section-intro">
                              <h4>IF YOU KNOW THE SQ. FT. AREA YOU WANT TO COVER</h4>
                              <p>Calculate the number of tiles I need to order:</p>
                            </div>
                            <div class="flex-box">
                              <div class="input-box">
                                <input
                                  type="text"
                                  name="calculator_footage"
                                  id="calculator-footage"
                                  class="required-entry validate-digits"
                                  placeholder="0"
                                >
                                <span class="input-label">Sq. Ft.</span>
                              </div>
                            </div>
                            <h4>Get a little extra</h4>
                            
                            <div id="overage_top">
                              <div id="overage-selectors">
                              <label>
                                <input type="radio" name="properties[TOP-OVERAGE]" value="0.10" checked> 10%
                              </label>
                              <label>
                                <input type="radio" name="properties[TOP-OVERAGE]" value="0.15"> 15%
                              </label>
                              <label>
                                <input type="radio" name="properties[TOP-OVERAGE]" value="manual" id="manualInputRadio"> Manual Input
                              </label>
                              <label>
                                <input type="radio" name="properties[TOP-OVERAGE]" value="no_overage"> No Overage
                              </label>
                              </div>
                              <div id="top-manual-ovg" style="display: none;">
                                <input type="number" id="manualInputField" name="properties[OVERAGE_MANUAL]" placeholder="Enter %" step="1" min="0"> %
                              </div>
                            </div>
                            <script>
                              document.querySelectorAll('#overage_top input[name="properties[TOP-OVERAGE]"]').forEach(radio => {
                                radio.addEventListener('change', function () {
                                  const manualInputField = document.querySelector('#overage_top #top-manual-ovg');
                                  if (this.value === 'manual') {
                                    manualInputField.style.display = 'inline-block';
                                    manualInputField.focus();
                                  } else {
                                    manualInputField.style.display = 'none';
                                  }
                                });
                              });
                            </script>
                            
                            <span class="small_text"
                              >10% is the recommended minimum to cover cuts and future repairs</span
                            >
                            <a href="#bottom_pop_up" class="calculate_btn" id="calculate_top">Calculate</a>
                          </div>
                          <div class="calculator-section line-separator">
                            <span class="separator">Or</span>
                          </div>
                          <div class="calculator-section dimensions active" id="calculator-dimensions-section">
                            <div class="section-intro">
                              <h4>IF YOU KNOW THE SIZE OF AREA YOU WANT TO COVER</h4>
                              <p>Calculate the number of tiles I need to order:</p>
                            </div>
                            <div class="dimension-box length-value">
                              <div class="flex-box">
                                <label class="label">Length</label>
                                <div class="input-box ft" novalidate="novalidate">
                                  <input
                                    type="text"
                                    placeholder="0"
                                    name="calculator_length_ft"
                                    id="calculator-length-ft"
                                    class="if-disable validate-number"
                                  >
                                  <span class="input-label">Feet</span>
                                </div>
                                <div class="input-box in" novalidate="novalidate">
                                  <input
                                    type="text"
                                    placeholder="0"
                                    name="calculator_length_in"
                                    id="calculator-length-in"
                                    class="if-disable validate-number"
                                  >
                                  <span class="input-label">Inches</span>
                                </div>
                              </div>
                            </div>
                            <div class="dimension-box width-value">
                              <div class="flex-box">
                                <label class="label">Width</label>
                                <div class="input-box ft" novalidate="novalidate">
                                  <input
                                    type="text"
                                    placeholder="0"
                                    name="calculator_width_ft"
                                    id="calculator-width-ft"
                                    class="if-disable validate-number"
                                  >
                                  <span class="input-label">Feet</span>
                                </div>
                                <div class="input-box in" novalidate="novalidate">
                                  <input
                                    type="text"
                                    placeholder="0"
                                    name="calculator_width_in"
                                    id="calculator-width-in"
                                    class="if-disable validate-number"
                                  >
                                  <span class="input-label">Inches</span>
                                </div>
                              </div>
                            </div>

                            <h4>Get a little extra</h4>
                            <div id="overage_bottom">
                              <div id="bottom-overage-selectors">
                              <label>
                                <input type="radio" name="properties[BTM-OVERAGE]" value="0.10" checked> 10%
                              </label>
                              <label>
                                <input type="radio" name="properties[BTM-OVERAGE]" value="0.15"> 15%
                              </label>
                              <label>
                                <input type="radio" name="properties[BTM-OVERAGE]" value="manual" id="bottom-manualInputRadio"> Manual Input
                              </label>
                              <label>
                                <input type="radio" name="properties[BTM-OVERAGE]" value="no_overage"> No Overage
                              </label>
                              </div>
                              <div id="bottom-manual-ovg" style="display: none;">
                                <input type="number" id="manualInputFieldBottom" name="properties[OVERAGE_MANUAL]" placeholder="Enter %" step="1" min="0"> %
                              </div>
                            </div>
                            <script>
                              document.querySelectorAll('#overage_bottom input[name="properties[BTM-OVERAGE]"]').forEach(radio => {
                                radio.addEventListener('change', function () {
                                  const manualInputFieldBottom = document.querySelector('#overage_bottom #bottom-manual-ovg');
                                  if (this.value === 'manual') {
                                    manualInputFieldBottom.style.display = 'inline-block';
                                    manualInputFieldBottom.focus();
                                  } else {
                                    manualInputFieldBottom.style.display = 'none';
                                  }
                                });
                              });
                            </script>

                            
                            <span class="small_text"
                              >10% is the recommended minimum to cover cuts and future repairs</span
                            >
                            <a href="#bottom_pop_up" class="calculate_btn" id="calculate_bottom">Calculate</a>
                          </div>
                          <div class="footer_outcome">
                            <div class="tile-results">
                              <div class="tile-results-title">Calculation Results</div>
                              
                              <!-- Custom Results Display -->
                              <div class="tile-result-row">
                                <span class="tile-result-label">Area Needed:</span>
                                <span class="tile-result-value" id="tile-area-display">0 Sq. Ft.</span>
                              </div>
                              <div class="tile-result-row">
                                <span class="tile-result-label">Total Coverage:</span>
                                <span class="tile-result-value" id="tile-coverage-display">0 Sq. Ft.</span>
                              </div>
                              <div class="tile-result-row">
                                <span class="tile-result-label">Boxes Needed:</span>
                                <span class="tile-result-value" id="tile-boxes-display">0</span>
                              </div>
                              <div class="tile-result-row">
                                <span class="tile-result-label">Total Price:</span>
                                <span class="tile-result-value" id="tile-price-display">$0.00</span>
                              </div>
                            </div>
                            
                            <!-- Hidden Original Results for Functionality -->
                            <div class="calculator-section line-separator" style="display: none;">
                              <span class="separator">Outcome</span>
                            </div>
                            <div class="flex-box" style="display: none;">
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="solution"
                                  placeholder="0"
                                >
                                <span class="input-label">Sq. Ft.</span>
                              </div>
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="total_coverage"
                                  placeholder="0"
                                >
                                <span class="input-label">Total Coverage Sq. Ft.</span>
                              </div>
                            </div>
                            <div class="flex-box" style="display: none;">
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="boxes"
                                  placeholder="0"
                                >
                                <span class="input-label">
                                  {% if product.metafields.measuringunitsatd.measuring_units_atd == "Box" %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}es
                                  {% elsif product.metafields.measuringunitsatd.measuring_units_atd == "Sheet" %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}s
                                  {% elsif product.metafields.measuringunitsatd.measuring_units_atd == "Piece" %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}s
                                  {% else %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}
                                  {% endif %}
                                </span>
                              </div>
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="total_cost"
                                  placeholder="0"
                                >
                                <span class="input-label">Total Cost</span>
                              </div>
                            </div>
                          </div>

                          <div class="calculator-section actions">
                            <button id="addToquanitity" class="btn-calculator">
                              <span id="addToCartquanitity">Add To Cart</span>
                            </button>
                          </div>
                        </div>
                        <div id="bottom_pop_up"></div>
                      </div>
                    </div>
                  {% endif %}

                  {% if product.tags contains "overage-popup-v3" %}
                  <style>
                    /* Tile Results Section - matching overage design */
                    .tile-results {
                        background: #fff;
                        border: 2px solid #e5e7eb;
                        border-radius: 12px;
                        padding: 12px 16px;
                        margin: 18px 0 0 0;
                    }
                    .tile-results-title {
                        font-size: 18px;
                        font-weight: 700;
                        color: #000;
                        text-align: center;
                        margin: 0 0 12px 0;
                    }
                    .tile-result-row {
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                        padding: 4px 0;
                    }
                    .tile-result-row:last-child {
                        padding-bottom: 4px;
                        margin-bottom: 0;
                        border-bottom: none;
                    }
                    .tile-result-label {
                        font-size: 17px;
                        font-weight: 500;
                        color: #000;
                    }
                    .tile-result-value {
                        font-size: 17px;
                        font-weight: 700;
                        color: #dc2626;
                    }
                    
                    /* Mobile adjustments for tile results */
                    @media (max-height: 667px) and (max-width: 480px) {
                        .tile-results {
                            padding: 8px 12px;
                            margin: 12px 0 0 0;
                        }
                        .tile-results-title {
                            font-size: 16px;
                            margin: 0 0 8px 0;
                        }
                        .tile-result-row {
                            padding: 2px 0;
                        }
                        .tile-result-label,
                        .tile-result-value {
                            font-size: 15px;
                        }
                    }
                    
                    #ovg-popup {
                      position: fixed;
                      top: 0;
                      left: 0;
                      width: 100%;
                      background: rgba(0, 0, 0, 0.4);
                      height: 100%;
                      display: none;
                      flex-direction: row;
                      align-items: center;
                      backdrop-filter: blur(10px);
                      justify-content: center;
                      transition: 0.4s;
                      z-index: 999;
                      padding: 20px;
                    }
                    #ovg-popup-content {
                      background: #fff;
                      position: relative;
                      overflow-y: auto;
                      max-height: 85vh;
                      width: 100%;
                      max-width: 350px;
                      border-radius: 16px;
                      box-shadow: 0 4px 24px rgba(0, 0, 0, 0.12);
                      margin: 0 auto;
                      padding-bottom: 0;
                    }
                    #ovg-popup.ovg-popup-open {
                      display: flex;
                    }
                    #ovg-popup-close {
                        width: 32px;
                        height: 32px;
                        background-color: rgba(255, 255, 255, 0.2);
                        border-radius: 50%;
                        position: absolute;
                        right: 12px;
                        top: 12px;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        cursor: pointer;
                        transition: background-color 0.2s;
                        z-index: 10;
                    }
                    #ovg-popup-close:hover {
                        background-color: rgba(255, 255, 255, 0.3);
                    }
                    #ovg-popup-close svg {
                        width: 16px;
                        height: 16px;
                        stroke: #fff;
                        stroke-width: 2px;
                    }
                    
                    /* Header Section */
                    .ovg-header {
                        background: #0066CC;
                        padding: 16px 20px;
                        border-radius: 16px 16px 0 0;
                        text-align: center;
                        position: relative;
                    }
                    .ovg-header .heading {
                        font-size: 20px;
                        font-weight: bold;
                        color: #fff;
                        margin: 0 0 6px 0;
                    }
                    .ovg-header .section-intro p {
                        font-size: 13px;
                        color: rgba(255, 255, 255, 0.9);
                        margin: 0;
                        font-weight: 400;
                        white-space: nowrap;
                        overflow: hidden;
                        text-overflow: ellipsis;
                    }
                    
                    /* Content Section */
                    .ovg-content {
                        padding: 12px 16px 0;
                    }
                    
                    /* Input Section */
                    .ovg-input-section {
                        margin-bottom: 8px;
                        text-align: center;
                    }
                    .ovg-input-section .input-wrapper {
                        display: flex;
                        justify-content: center;
                        margin-bottom: 4px;
                    }
                    .ovg-input-section .input-box {
                        position: relative;
                        width: 100%;
                        max-width: 280px;
                    }
                    .ovg-input-section .input-box input {
                        width: 100%;
                        text-align: center;
                        border: none;
                        border-radius: 12px;
                        padding: 14px 12px;
                        font-size: 22px;
                        font-weight: 600;
                        background: #f9fafb;
                        outline: none;
                        transition: background-color 0.2s;
                        color: #374151;
                    }
                    .ovg-input-section .input-box input:focus {
                        background: #fff;
                        box-shadow: 0 0 0 2px #0066CC;
                    }
                    .ovg-input-section .input-label {
                        display: block;
                        font-size: 16px;
                        color: #000;
                        margin-top: 6px;
                        margin-bottom: 4px;
                        font-weight: 600;
                    }
                    
                    /* Overage Section */
                    .ovg-overage-section {
                        margin-bottom: 12px;
                    }
                    .ovg-overage-section h4 {
                        font-size: 18px;
                        font-weight: 700;
                        color: #000;
                        text-align: center;
                        margin: 0 0 12px 0;
                    }
                    #ovg-overage-selectors {
                        display: grid;
                        grid-template-columns: 1fr 1fr;
                        gap: 8px;
                        margin-bottom: 12px;
                    }
                    #ovg-overage-selectors label {
                        position: relative;
                        cursor: pointer;
                        margin: 0;
                    }
                    #ovg-overage-selectors input[type="radio"] {
                        position: absolute;
                        opacity: 0;
                        pointer-events: none;
                    }
                    #ovg-overage-selectors label {
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        padding: 10px 12px;
                        border: 2px solid #e5e7eb;
                        border-radius: 12px;
                        background: #fff;
                        color: #000;
                        font-weight: 600;
                        font-size: 15px;
                        transition: all 0.2s;
                        min-height: 44px;
                    }
                    #ovg-overage-selectors input[type="radio"]:checked + span {
                        background: #0066CC;
                        color: #fff;
                        border-color: #0066CC;
                    }
                    #ovg-overage-selectors input[type="radio"]:checked + span {
                        background: #0066CC !important;
                        color: #fff !important;
                        border-color: #0066CC !important;
                    }
                    #ovg-overage-selectors label:has(input[type="radio"]:checked) {
                        background: #0066CC !important;
                        color: #fff !important;
                        border-color: #0066CC !important;
                    }
                    #ovg-overage-selectors label:hover {
                        transform: translateY(-1px);
                        box-shadow: 0 2px 8px rgba(81, 129, 188, 0.15);
                    }
                    
                    /* Manual Input Section */
                    .ovg-manual-section {
                        text-align: center;
                        margin: 12px 0;
                    }
                    .ovg-custom-text {
                        color: #0066CC;
                        font-style: italic;
                        font-size: 14px;
                        margin-bottom: 12px;
                        display: none;
                    }
                    .ovg-custom-text.show {
                        display: block;
                    }
                    .ovg-manual-input-wrapper {
                        display: none;
                        align-items: center;
                        justify-content: center;
                        gap: 8px;
                    }
                    .ovg-manual-input-wrapper.show {
                        display: flex;
                    }
                    #manualInputFieldOVG {
                        border: 2px solid #e5e7eb;
                        border-radius: 8px;
                        padding: 8px 12px;
                        width: 80px;
                        text-align: center;
                        font-size: 16px;
                        font-weight: 600;
                        outline: none;
                        background: #fff;
                    }
                    #manualInputFieldOVG:focus {
                        border-color: #0066CC;
                        background: #fff;
                    }
                    .ovg-percent-symbol {
                        font-size: 16px;
                        font-weight: 600;
                        color: #374151;
                    }
                    
                    /* Info Text Section */
                    .ovg-info-section {
                        text-align: center;
                        margin: 12px 0 6px 0;
                    }
                    .ovg-info-text {
                        color: #0066CC;
                        font-style: normal;
                        font-size: 16px;
                        margin: 0;
                        min-height: 20px;
                        line-height: 1.4;
                        font-weight: 400;
                        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
                    }
                    #ovg-info-no {
                        color: #dc2626;
                    }
                    
                    /* Results Section */
                    .ovg-results {
                        background: #fff;
                        border: 2px solid #e5e7eb;
                        border-radius: 12px;
                        padding: 12px 16px;
                        margin: 18px 0 0 0;
                    }
                    .ovg-results-title {
                        font-size: 18px;
                        font-weight: 700;
                        color: #000;
                        text-align: center;
                        margin: 0 0 12px 0;
                    }
                    .ovg-result-row {
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                        padding: 4px 0;
                    }
                    .ovg-result-row:last-child {
                        padding-bottom: 4px;
                        margin-bottom: 0;
                        border-bottom: none;
                    }
                    .ovg-result-label {
                        font-size: 17px;
                        font-weight: 500;
                        color: #000;
                    }
                    .ovg-result-value {
                        font-size: 17px;
                        font-weight: 700;
                        color: #dc2626;
                    }
                    
                    /* Hidden elements */
                    .ovg-results .calculator-section,
                    .ovg-results .flex-box,
                    .ovg-results .input-box,
                    .ovg-results .input-label {
                        display: none !important;
                    }
                    
                    /* Add to Cart Button */
                    .ovg-add-to-cart {
                        background: #0066CC;
                        color: #fff;
                        border: none;
                        border-radius: 12px;
                        padding: 12px 16px;
                        font-size: 16px;
                        font-weight: bold;
                        cursor: pointer;
                        transition: all 0.2s;
                        width: calc(100% - 32px);
                        margin: 16px 16px 16px 16px;
                        position: relative;
                        bottom: 0;
                        box-shadow: 0 2px 8px rgba(81, 129, 188, 0.3);
                    }
                    .ovg-add-to-cart:hover {
                        background: #0052a3;
                        transform: translateY(-1px);
                        box-shadow: 0 4px 12px rgba(0, 102, 204, 0.4);
                    }
                    
                    /* Override default styles */
                    #overage-submit {
                        position: absolute;
                        top: 0;
                        left: 0;
                        width: 100%;
                        height: 100%;
                        z-index: 11;
                    }
                    span#ovg-total_square {
                        margin: 0 5px;
                    }
                    #atc-btn-wrap {
                        position: relative;
                    }
                    
                    /* Mobile Responsiveness */
                    @media (max-width: 480px) {
                        #ovg-popup {
                            padding: 10px;
                        }
                        #ovg-popup-content {
                            max-width: 100%;
                            max-height: 90vh;
                        }
                        .ovg-header {
                            padding: 14px 16px;
                        }
                        .ovg-header .section-intro p {
                            font-size: 12px;
                        }
                        .ovg-content {
                            padding: 16px 12px 0;
                        }
                        .ovg-add-to-cart {
                            padding: 12px;
                        }
                    }
                    
                    /* Extra small screens (iPhone SE, etc.) */
                    @media (max-height: 667px) and (max-width: 480px) {
                        #ovg-popup {
                            padding: 8px;
                        }
                        #ovg-popup-content {
                            max-height: 95vh;
                        }
                        .ovg-header {
                            padding: 12px 16px;
                        }
                        .ovg-header .heading {
                            font-size: 18px;
                            margin: 0 0 4px 0;
                        }
                        .ovg-header .section-intro p {
                            font-size: 11px;
                        }
                        .ovg-content {
                            padding: 8px 12px 0;
                        }
                        .ovg-input-section {
                            margin-bottom: 6px;
                        }
                        .ovg-input-section .input-box input {
                            padding: 12px 10px;
                            font-size: 20px;
                        }
                        .ovg-input-section .input-label {
                            font-size: 14px;
                            margin-top: 4px;
                            margin-bottom: 2px;
                        }
                        .ovg-overage-section {
                            margin-bottom: 8px;
                        }
                        .ovg-overage-section h4 {
                            font-size: 16px;
                            margin: 0 0 8px 0;
                        }
                        #ovg-overage-selectors {
                            gap: 6px;
                            margin-bottom: 8px;
                        }
                        #ovg-overage-selectors label {
                            padding: 8px 10px;
                            font-size: 14px;
                            min-height: 38px;
                        }
                        .ovg-manual-section {
                            margin: 8px 0;
                        }
                        .ovg-info-section {
                            margin: 8px 0 4px 0;
                        }
                        .ovg-info-text {
                            font-size: 14px;
                            min-height: 18px;
                        }
                        .ovg-results {
                            padding: 8px 12px;
                            margin: 12px 0 0 0;
                        }
                        .ovg-results-title {
                            font-size: 16px;
                            margin: 0 0 8px 0;
                        }
                        .ovg-result-row {
                            padding: 2px 0;
                        }
                        .ovg-result-label,
                        .ovg-result-value {
                            font-size: 15px;
                        }
                        .ovg-add-to-cart {
                            padding: 10px 12px;
                            font-size: 15px;
                            margin: 12px 12px 12px 12px;
                        }
                    }
                  </style>
                  <div id="ovg-popup">
                      <div id="ovg-popup-content">
                        <div id="ovg-popup-close">
                          <svg viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="#000000">
                          <g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><line x1="16" y1="16" x2="48" y2="48"></line><line x1="48" y1="16" x2="16" y2="48"></line></g>
                          </svg>
                        </div>
                        
                        <div class="ovg-header">
                          <div class="heading">
                            <span>Overage Calculator</span>
                          </div>
                          <div class="section-intro">
                            <p>Add overage for cuts, waste, breaks, and repairs</p>
                          </div>
                        </div>
                        
                        <div class="ovg-content">
                          <div class="ovg-input-section">
                            <div class="input-wrapper">
                              <div class="input-box">
                                <input
                                  type="text"
                                  name="ovg-calculator-footage"
                                  id="ovg-calculator-footage"
                                  class="required-entry validate-digits"
                                  placeholder="0"
                                >
                                <span class="input-label">Square Feet</span>
                              </div>
                            </div>
                          </div>
                          
                          <div class="ovg-overage-section">
                            <h4>Overage Amount</h4>
                            <div id="ovg-overage">
                              <div id="ovg-overage-selectors">
                              <label>
                                <input type="radio" name="properties[OVERAGE]" value="0.10" checked>
                                <span>10%</span>
                              </label>
                              <label>
                                <input type="radio" name="properties[OVERAGE]" value="0.15">
                                <span>15%</span>
                              </label>
                              <label>
                                <input type="radio" name="properties[OVERAGE]" value="manual" id="ovg-manualInputRadio">
                                <span>Manual Input</span>
                              </label>
                              <label>
                                <input type="radio" name="properties[OVERAGE]" value="no_overage">
                                <span>No Overage</span>
                              </label>
                              </div>
                            </div>
                            
                            <!-- Information text for different overage options -->
                            <div class="ovg-info-section">
                              <div class="ovg-info-text" id="ovg-info-10" style="display: block;">
                                Recommended minimum
                              </div>
                              <div class="ovg-info-text" id="ovg-info-15" style="display: none;">
                                Extra coverage for complex cuts
                              </div>
                              <div class="ovg-info-text" id="ovg-info-manual" style="display: none;">
                                Custom percentage
                              </div>
                              <div class="ovg-info-text" id="ovg-info-no" style="display: none;">
                                Not recommended - no extra material
                              </div>
                            </div>
                            
                            <div class="ovg-manual-section">
                              <div class="ovg-manual-input-wrapper" id="ovg-manual-input-wrapper">
                                <input type="number" id="manualInputFieldOVG" name="properties[OVERAGE_MANUAL]" value="20" step="1" min="0">
                                <span class="ovg-percent-symbol">%</span>
                              </div>
                            </div>
                            
                            <script>
                              document.querySelectorAll('#ovg-overage input[name="properties[OVERAGE]"]').forEach(radio => {
                                radio.addEventListener('change', function () {
                                  const manualWrapper = document.querySelector('#ovg-manual-input-wrapper');
                                  
                                  // Hide all info texts first
                                  document.querySelectorAll('.ovg-info-text').forEach(text => text.style.display = 'none');
                                  
                                  if (this.value === 'manual') {
                                    manualWrapper.classList.add('show');
                                    document.querySelector('#ovg-info-manual').style.display = 'block';
                                    // Set default value and focus
                                    const manualField = document.querySelector('#manualInputFieldOVG');
                                    if (!manualField.value || manualField.value === '') {
                                      manualField.value = '20';
                                    }
                                    manualField.focus();
                                    manualField.select(); // Select the text so user can easily replace it
                                  } else {
                                    manualWrapper.classList.remove('show');
                                    // Show appropriate info text
                                    if (this.value === '0.10') {
                                      document.querySelector('#ovg-info-10').style.display = 'block';
                                    } else if (this.value === '0.15') {
                                      document.querySelector('#ovg-info-15').style.display = 'block';
                                    } else if (this.value === 'no_overage') {
                                      document.querySelector('#ovg-info-no').style.display = 'block';
                                    }
                                  }
                                });
                              });
                            </script>
                            
                            <a href="#" class="ovg-calculate-btn" id="ovg-calculate" style="display: none;">Calculate</a>
                          </div>

                          <div class="ovg-results footer_outcome">
                            <div class="ovg-results-title">Calculation Results</div>
                            
                            <!-- Custom Results Display -->
                            <div class="ovg-result-row">
                              <span class="ovg-result-label">Overage:</span>
                              <span class="ovg-result-value" id="ovg-overage-display">0 Sq. Ft.</span>
                            </div>
                            <div class="ovg-result-row">
                              <span class="ovg-result-label">Total:</span>
                              <span class="ovg-result-value" id="ovg-total-display">0 Sq. Ft.</span>
                            </div>
                            <div class="ovg-result-row">
                              <span class="ovg-result-label">Boxes Needed:</span>
                              <span class="ovg-result-value" id="ovg-boxes-display">0</span>
                            </div>
                            <div class="ovg-result-row">
                              <span class="ovg-result-label">Total Price:</span>
                              <span class="ovg-result-value" id="ovg-price-display">$0.00</span>
                            </div>
                            
                            <!-- Hidden Original Results for Functionality -->
                            <div class="calculator-section line-separator">
                              <span class="separator">Results</span>
                            </div>
                            <div class="flex-box">
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="ovg-solution"
                                  placeholder="0"
                                >
                                <span class="input-label">Sq. Ft.</span>
                              </div>
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="ovg-total_coverage"
                                  placeholder="0"
                                >
                                <span class="input-label">Total Coverage Sq. Ft.</span>
                              </div>
                            </div>
                            <div class="flex-box">
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="ovg-boxes"
                                  placeholder="0"
                                >
                                <span class="input-label">
                                  {% if product.metafields.measuringunitsatd.measuring_units_atd == "Box" %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}es
                                  {% elsif product.metafields.measuringunitsatd.measuring_units_atd == "Sheet" %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}s
                                  {% elsif product.metafields.measuringunitsatd.measuring_units_atd == "Piece" %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}s
                                  {% else %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}
                                  {% endif %}
                                </span>
                              </div>
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="ovg-total_cost"
                                  placeholder="0"
                                >
                                <span class="input-label">Total Price</span>
                              </div>
                            </div>
                          </div>
                        </div>

                        <button id="ovg-addToquanitity" class="ovg-add-to-cart">
                          <span id="ovg-addToCartquanitity">Add To Cart</span>
                        </button>
                        
                      </div>
                    </div>

                  {% endif %}
                
                  <style>
                    .js--qty-adjuster {
                      display: none;
                    }
                  </style>

<script defer="defer">
  $(document).ready(function() {
    console.log("Document ready, calculator script loaded.");
                        
    var output_boxes = 0;
    var overageSet = false;

    // Function to update property fields
    function updatePropertyFields(quantity, sqft, pieces) {
      // Only update if the elements exist
      if (document.querySelector('#property-qty')) {
        document.querySelector('#property-qty').value = quantity;
      }
      
      if (document.querySelector('#property-sqft')) {
        document.querySelector('#property-sqft').value = sqft;
      }
      
      if (document.querySelector('#property-pieces')) {
        document.querySelector('#property-pieces').value = pieces;
      }
    }

    // Calculator popup
    $(".calc_pop_up").click(function(event) {
      var container = $("#tile-calculator");
      if (!container.is(event.target) && !container.has(event.target).length) {
        console.log("Closing calc pop-up.");
        $(".calc_pop_up").removeClass("calc_pop_up-open");
        $(this).parents('html').removeClass('overflow-pop-hidden');
      }
    });
    
    $(".productInfo-popup-close").click(function(event) {
      $(".calc_pop_up").removeClass("calc_pop_up-open");
        $(this).parents('html').removeClass('overflow-pop-hidden');
    });
    
    $(".open_calc_pop_up").click(function(){
      $(this).parents('html').addClass('overflow-pop-hidden');
      $(".calc_pop_up").addClass("calc_pop_up-open");
      console.log("Added calc_pop_up-open class.");
    });

    // Accordion toggle functionality
    $(".open_calc_accordion").click(function(){
      var accordion = $("#tile-calculator-accordion");
      if (accordion.is(':visible')) {
        // Hide accordion
        accordion.removeClass('show').addClass('hide');
        setTimeout(function() {
          accordion.hide().removeClass('hide');
        }, 400);
        console.log("Hiding accordion.");
      } else {
        // Show accordion
        accordion.show().addClass('show');
        console.log("Showing accordion.");
      }
    });

    $("#calculator-footage").focus(function() {
      console.log("Calculator footage input focused.");
      $("#calculator-footage-section").removeClass("opacity_low");
      $("#calculator-dimensions-section").addClass("opacity_low");
    });

    $(".validate-number").focus(function() {
      console.log("Validate number input focused.");
      $("#calculator-footage-section").addClass("opacity_low");
      $("#calculator-dimensions-section").removeClass("opacity_low");
    });

    $("#calculate_top").click(function() {
      console.log("Calculate top button clicked.");
      $("#calculator-footage-section").removeClass("opacity_low");
      $("#calculator-dimensions-section").addClass("opacity_low");
      calculateTop();
    });

    $("#calculate_bottom").click(function() {
      console.log("Calculate bottom button clicked.");
      $("#calculator-footage-section").addClass("opacity_low");
      $("#calculator-dimensions-section").removeClass("opacity_low");
      calculateBottom();
    });

    $("#ovg-calculate").click(function() {
      console.log("Calculate overage.");
      calculateOverage();
    });
    
    // Auto-calculation function for overage
    function autoCalculateOverage() {
      const footageInput = $('#ovg-calculator-footage');
      if (footageInput.length && footageInput.val() && parseFloat(footageInput.val()) > 0) {
        console.log("Auto-calculating overage...");
        calculateOverage();
      }
    }
    
    // Auto-calculate when overage percentage is selected
    $(document).on('change', '#ovg-overage input[name="properties[OVERAGE]"]', function() {
      console.log('Overage selection changed to:', this.value);
      if (this.value !== 'manual') {
        autoCalculateOverage();
      } else {
        // If manual is selected and there's already a value in manual input, calculate
        const manualValue = $('#manualInputFieldOVG').val();
        if (manualValue && parseFloat(manualValue) >= 0) {
          autoCalculateOverage();
        }
      }
    });
    
    // Auto-calculate when manual input changes
    $(document).on('input change', '#manualInputFieldOVG', function() {
      console.log('Manual input changed to:', $(this).val());
      const inputValue = $(this).val();
      if (inputValue !== '' && parseFloat(inputValue) >= 0) {
        autoCalculateOverage();
      }
    });
    
    // Auto-calculate when square footage input changes
    var footageInputTimer;
    $(document).on('input', '#ovg-calculator-footage', function() {
      clearTimeout(footageInputTimer);
      footageInputTimer = setTimeout(autoCalculateOverage, 500);
    });
    
    $("#squared_size").change(function() {
      console.log("Squared size input changed.");
      calculateFromSquaredSize();
    });

    $("#quantity_look_alike").change(function() {
      console.log("Quantity look-alike input changed.");
      calculateFromQuantity();
      
      // Update property fields when quantity changes
      var quantity = Number($(this).val() || 0);
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      
      updatePropertyFields(quantity, (quantity * box_dimensions).toFixed(2), quantity * tiles_per_box);
    });

    $('#addToquanitity').click(function() {
        if (output_boxes > 0) {
            {% if product.variants.first.inventory_management == 'shopify' %}
              if (output_boxes > {{ max_qty }}) {
                  alert("Only {{ max_qty }} available");
                  return;
              }
            {% endif %}
            $('.calc_pop_up').removeClass('calc_pop_up-open'); 
            $(this).parents('html').removeClass('overflow-pop-hidden');
            $('#x-atc-button-{{ section.id }}').click();
        }
    });

          } else {
              // If no calculation, just close
              $("#ovg-popup").removeClass("ovg-popup-open");
              $(this).parents('html').removeClass('overflow-pop-hidden');
          }
        }
      });

      $("#ovg-popup-close").click(function(event) {
        // Act like Add to Cart button when closing
        if (output_boxes > 0) {
            {% if product.variants.first.inventory_management == 'shopify' %}
              if (output_boxes > {{ max_qty }}) {
                  alert("Only {{ max_qty }} available");
                  return;
              }
            {% endif %}
            $("#ovg-popup").removeClass("ovg-popup-open");
            $(this).parents('html').removeClass('overflow-pop-hidden');
            $('#x-atc-button-{{ section.id }}').click();
        } else {
            // If no calculation, just close
            $("#ovg-popup").removeClass("ovg-popup-open");
            $(this).parents('html').removeClass('overflow-pop-hidden');
        }
      });

      $('#overage-submit').click(function() {
        if (!overageSet) {
          $(this).parents('html').addClass('overflow-pop-hidden');
          $("#ovg-popup").addClass("ovg-popup-open");
          
          // Auto-populate with current square footage and calculate with 10% overage
          setTimeout(function() {
            const currentFootage = $('#squared_size').val() || $('#calculator-footage').val() || '';
            if (currentFootage && parseFloat(currentFootage) > 0) {
              $('#ovg-calculator-footage').val(currentFootage);
              // Trigger calculation with the default 10% selection
              if (typeof calculateOverage === 'function') {
                calculateOverage();
              }
            }
          }, 100);
          
        } else {
          $('#x-atc-button-{{ section.id }}').click();
        }
      });
    {% endif %}

    console.log("All event listeners and functions set up.");
  });

  // Function to update custom results display
  function updateCustomResults() {
    // Wait a bit for the original calculation to complete
    setTimeout(function() {
      // Get values from hidden original results
      const overageValue = $('#ovg-solution').val() || '0';
      const totalValue = $('#ovg-total_coverage').val() || '0';
      const boxesValue = $('#ovg-boxes').val() || '0';
      const priceValue = $('#ovg-total_cost').val() || '$0.00';
      
      // Update custom display elements
      $('#ovg-overage-display').text(overageValue + ' Sq. Ft.');
      $('#ovg-total-display').text(totalValue + ' Sq. Ft.');
      $('#ovg-boxes-display').text(boxesValue);
      $('#ovg-price-display').text(priceValue);
      
      console.log('Updated custom results:', {
        overage: overageValue,
        total: totalValue,
        boxes: boxesValue,
        price: priceValue
      });
    }, 100);
  }

  // Hook into the calculateOverage function
  const originalCalculateOverage = window.calculateOverage;
  window.calculateOverage = function() {
    if (originalCalculateOverage) {
      originalCalculateOverage.apply(this, arguments);
      updateCustomResults();
    }
  };

  // Also update when any of the original result fields change
  $(document).on('change input', '#ovg-solution, #ovg-total_coverage, #ovg-boxes, #ovg-total_cost', function() {
    updateCustomResults();
  });
  
  // Function to update tile calculator custom results
  function updateTileCustomResults() {
    // Wait a bit for the original calculation to complete
    setTimeout(function() {
      // Get values from hidden original results
      const areaValue = $('#solution').val() || '0';
      const coverageValue = $('#total_coverage').val() || '0';
      const boxesValue = $('#boxes').val() || '0';
      const priceValue = $('#total_cost').val() || '$0.00';
      
      // Update custom display elements
      $('#tile-area-display').text(areaValue + ' Sq. Ft.');
      $('#tile-coverage-display').text(coverageValue + ' Sq. Ft.');
      $('#tile-boxes-display').text(boxesValue);
      $('#tile-price-display').text(priceValue);
      
      console.log('Updated tile custom results:', {
        area: areaValue,
        coverage: coverageValue,
        boxes: boxesValue,
        price: priceValue
      });
    }, 100);
  }

  // Also update tile results when any of the original result fields change
  $(document).on('change input', '#solution, #total_coverage, #boxes, #total_cost', function() {
    updateTileCustomResults();
  });

    function up(v, n) {
      return Math.ceil((v * Math.pow(10, n)) / Math.pow(10, n));
    }

    function roundUp(num, decimalPlaces) {
      const factor = Math.pow(10, decimalPlaces);
      return Math.ceil(num * factor) / factor;
    }

    function calculateTop(){
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      
      var calculator_footage = Number($('#calculator-footage').val() || 0);
      
      // Get overage percentage
      var selectedOverage = $('#overage_top input[name="properties[TOP-OVERAGE]"]:checked').val();
      var manualOverage = $('#overage_top #manualInputField').val();
      var overage = 0;
      
      if (selectedOverage === 'manual') {
        overage = manualOverage ? parseFloat(manualOverage) / 100 : 0;
      } else if (selectedOverage === 'no_overage') {
        overage = 0;
      } else {
        overage = parseFloat(selectedOverage);
      }
      
      // Calculate solution with overage
      var solution = calculator_footage * (1 + overage);
      var solution_rounded = parseFloat(solution.toFixed(2));
      
      // Calculate boxes needed
      var box_output = solution / box_dimensions;
      var amount_of_boxes = box_output;
      
      output_boxes = up(amount_of_boxes, 0);

      {% if product.variants.first.inventory_management == 'shopify' %}
        if (output_boxes > {{ max_qty }}) {
          alert('Only {{ max_qty }} available');
          output_boxes = {{ max_qty }};
        }
      {% endif %}

      // Calculate total cost
      var product_price = {{ product.price | divided_by: 100.00 }};
      var total_cost_avg = product_price * output_boxes;
      var rounded_total_avg = roundUp(total_cost_avg, 2);
      
      // Calculate actual coverage based on boxes
      var total_coverage = output_boxes * box_dimensions;
      var total_coverage_rounded = parseFloat(total_coverage.toFixed(2));
      
      // Update outputs
      $('#boxes').val(output_boxes);
      $('#solution').val(solution_rounded);
      $('#total_cost').val('$' + rounded_total_avg.toFixed(2));
      $('#boxes_needed').text(output_boxes);
      $('#total_coverage').val(total_coverage_rounded);
      $('#total_square').text(total_coverage_rounded);
      $('#squared_size').val(total_coverage_rounded);
      $('[name="quantity"]').attr('value', output_boxes).val(output_boxes);
      $('#quantity_look_alike').val(output_boxes);
      $('#product_page_total').text('$' + rounded_total_avg.toFixed(2));

      const overagePercentage = Math.round(overage * 100) + '%';
      console.log('Formatted overage:', overagePercentage);
      const propertyOverage = document.querySelector('#property-overage');
      if (propertyOverage) {
        propertyOverage.value = overagePercentage;
        console.log('Updated #property-overage to:', overagePercentage);
      } else {
        console.error('#property-overage element not found');
      }
      
      // Update property fields
      updatePropertyFields(output_boxes, total_coverage_rounded, output_boxes * tiles_per_box);
      
      // Set overage flag
      overageSet = true;
      if ($('#overage-submit').length > 0) {
        $('#overage-submit').remove();
      }
      
      // Update tile calculator custom display
      updateTileCustomResults();
    }

    function calculateBottom(){
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      
      var length_ft = Number($('#calculator-length-ft').val() || 0);
      var length_in = Number($('#calculator-length-in').val() || 0);
      var width_ft = Number($('#calculator-width-ft').val() || 0);
      var width_in = Number($('#calculator-width-in').val() || 0);
      
      var length = (length_ft) + (length_in / 12);
      var width = (width_ft) + (width_in / 12);
      
      var area = length * width;
      var area_rounded = parseFloat(area.toFixed(2));
      
      var selectedOverage = $('#overage_bottom input[name="properties[BTM-OVERAGE]"]:checked').val();
      var manualOverage = $('#overage_bottom #manualInputFieldBottom').val();
      var overage = 0;
      
      if (selectedOverage === 'manual') {
        overage = manualOverage ? parseFloat(manualOverage) / 100 : 0;
      } else if (selectedOverage === 'no_overage') {
        overage = 0;
      } else {
        overage = parseFloat(selectedOverage);
      }
      
      var solution = area * (1 + overage);
      var solution_rounded = parseFloat(solution.toFixed(2));
      
      var box_output = solution / box_dimensions;
      var amount_of_boxes = box_output;
      output_boxes = up(amount_of_boxes, 0);

      {% if product.variants.first.inventory_management == 'shopify' %}
        if (output_boxes > {{ max_qty }}) {
          alert('Only {{ max_qty }} available');
          output_boxes = {{ max_qty }};
        }
      {% endif %}
      
      var product_price = {{ product.price | divided_by: 100.00 }};
      var total_cost_avg = product_price * output_boxes;
      var rounded_total_avg = roundUp(total_cost_avg, 2);
      
      // Calculate actual coverage based on boxes
      var total_coverage = output_boxes * box_dimensions;
      var total_coverage_rounded = parseFloat(total_coverage.toFixed(2));
      
      // Update outputs
      $('#boxes').val(output_boxes);
      $('#solution').val(solution_rounded);
      $('#total_cost').val('$' + rounded_total_avg.toFixed(2));
      $('#boxes_needed').text(output_boxes);
      $('#total_coverage').val(total_coverage_rounded);
      $('#total_square').text(total_coverage_rounded);
      $('#squared_size').val(total_coverage_rounded);
      $('[name="quantity"]').attr('value', output_boxes).val(output_boxes);
      $('#quantity_look_alike').val(output_boxes);
      $('#product_page_total').text('$' + rounded_total_avg.toFixed(2));

      const overagePercentage = Math.round(overage * 100) + '%';
      console.log('Formatted overage:', overagePercentage);
      const propertyOverage = document.querySelector('#property-overage');
      if (propertyOverage) {
        propertyOverage.value = overagePercentage;
        console.log('Updated #property-overage to:', overagePercentage);
      } else {
        console.error('#property-overage element not found');
      }
      
      // Update property fields
      updatePropertyFields(output_boxes, total_coverage_rounded, output_boxes * tiles_per_box);
      
      // Set overage flag
      overageSet = true;
      if ($('#overage-submit').length > 0) {
        $('#overage-submit').remove();
      }
      
      // Update tile calculator custom display
      updateTileCustomResults();
    }

    function calculateFromSquaredSize(){
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      var squared_size = Number($('#squared_size').val() || 0);
      var box_output = squared_size / box_dimensions;
      var amount_of_boxes = box_output;
      output_boxes = up(amount_of_boxes, 0);

      {% if product.variants.first.inventory_management == 'shopify' %}
        if (output_boxes > {{ max_qty }}) {
          alert('Only {{ max_qty }} available');
          output_boxes = {{ max_qty }};
        }
      {% endif %}

      var total_coverage = output_boxes * box_dimensions;
      var total_coverage_rounded = parseFloat(total_coverage.toFixed(2));
      
      var product_price = {{ product.price | divided_by: 100.00 }};
      var total_cost_avg = product_price * output_boxes;
      var rounded_total_avg = roundUp(total_cost_avg, 2);
      
      $('#boxes').val(output_boxes);
      $('#solution').val(total_coverage_rounded);
      $('#squared_size').val(total_coverage_rounded);
      $('#total_cost').val('$' + rounded_total_avg);
      $('#boxes_needed').text(output_boxes);
      $('[name="quantity"]').attr('value',output_boxes).val(output_boxes);
      $('#quantity_look_alike').val(output_boxes);
      $('#product_page_total').text('$' + rounded_total_avg);
      $('#calculator-footage').val(total_coverage_rounded);
      $('#ovg-calculator-footage').val(total_coverage_rounded);
      // Update property fields
      updatePropertyFields(output_boxes, total_coverage_rounded, output_boxes * tiles_per_box);
    }

    function calculateFromQuantity(){
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      var quantity_look_alike = Number($('#quantity_look_alike').val() || 0);

      if (quantity_look_alike > {{ max_qty }}) {
        alert('Only {{ max_qty }} available');
        quantity_look_alike = {{ max_qty }};
        document.getElementById('quantity_look_alike').value = quantity_look_alike; 
      }
      
      var q_calc = quantity_look_alike * box_dimensions;
      var q_calc_rounded = parseFloat(q_calc.toFixed(2));
      var product_price = {{ product.price | divided_by: 100.00 }};
      var total_price = product_price * quantity_look_alike;
      var rounded_total = up(total_price, 2);

      $('#product_page_total').text('$' + rounded_total);
      $('#squared_size').val(q_calc_rounded);
      $('#calculator-footage').val(q_calc_rounded);
      $('#ovg-calculator-footage').val(q_calc_rounded);
      
      $('[name="quantity"]').attr('value',quantity_look_alike).val(quantity_look_alike);
      
      // Update property fields
      updatePropertyFields(quantity_look_alike, q_calc_rounded, quantity_look_alike * tiles_per_box);
    }

    function calculateOverage(){
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      var calculator_footage = Number($('#ovg-calculator-footage').val() || 0);
      
      // Get overage percentage
      var selectedOverage = $('#ovg-overage-selectors input[name="properties[OVERAGE]"]:checked').val();
      var manualOverage = $('#manualInputFieldOVG').val();
      var overage = 0;
      
      console.log('Selected overage:', selectedOverage);
      console.log('Manual overage input:', manualOverage);
      console.log('Calculator footage:', calculator_footage);
      
      if (selectedOverage === 'manual') {
        // Make sure we're parsing the manual input correctly
        overage = manualOverage ? parseFloat(manualOverage) / 100 : 0;
        console.log('Parsed manual overage (after division):', overage);
      } else if (selectedOverage === 'no_overage') {
        overage = 0;
      } else {
        overage = parseFloat(selectedOverage);
      }
      
      // Calculate overage amount
      var overage_amount = calculator_footage * overage;
      var overage_amount_rounded = parseFloat(overage_amount.toFixed(2));
      
      // Calculate solution with overage
      var solution = calculator_footage * (1 + overage);
      var solution_rounded = parseFloat(solution.toFixed(2));
      
      // Calculate boxes needed - use Math.round instead of up() for overage calculations
      var box_output = solution / box_dimensions;
      var amount_of_boxes = box_output;
      output_boxes = Math.round(amount_of_boxes);

      {% if product.variants.first.inventory_management == 'shopify' %}
        if (output_boxes > {{ max_qty }}) {
          alert('Only {{ max_qty }} available');
          output_boxes = {{ max_qty }};
        }
      {% endif %}

      const overagePercentage = Math.round(overage * 100) + '%';
      console.log('Formatted overage:', overagePercentage);
      const propertyOverage = document.querySelector('#property-overage');
      if (propertyOverage) {
        propertyOverage.value = overagePercentage;
        console.log('Updated #property-overage to:', propertyOverage.value);
      } else {
        console.error('#property-overage element not found');
      }
      
      // Calculate total cost
      var product_price = {{ product.price | divided_by: 100.00 }};
      var total_cost_avg = product_price * output_boxes;
      var rounded_total_avg = roundUp(total_cost_avg, 2);
      
      // Calculate actual coverage based on boxes
      var total_coverage = output_boxes * box_dimensions;
      var total_coverage_rounded = parseFloat(total_coverage.toFixed(2));
      
      // Update original hidden outputs (for functionality)
      $('#ovg-boxes').val(output_boxes);
      $('#ovg-solution').val(overage_amount_rounded);
      $('#ovg-total_cost').val('$' + rounded_total_avg.toFixed(2));
      $('#ovg-boxes_needed').text(output_boxes);
      $('#ovg-total_coverage').val(solution_rounded);
      $('#ovg-total_square').text(solution_rounded);
      $('#squared_size').val(solution_rounded);
      $('[name="quantity"]').attr('value', output_boxes).val(output_boxes);
      $('#quantity_look_alike').val(output_boxes);
      $('#product_page_total').text('$' + rounded_total_avg.toFixed(2));
      
      // Update custom display elements
      $('#ovg-overage-display').text(overage_amount_rounded.toFixed(2) + ' Sq. Ft.');
      $('#ovg-total-display').text(solution_rounded.toFixed(2) + ' Sq. Ft.');
      $('#ovg-boxes-display').text(output_boxes);
      $('#ovg-price-display').text('$' + rounded_total_avg.toFixed(2));
      
      console.log('Updated custom display:', {
        overage: overage_amount_rounded,
        total: solution_rounded,
        boxes: output_boxes,
        price: '$' + rounded_total_avg.toFixed(2)
      });
      
      // Update property fields
      updatePropertyFields(output_boxes, total_coverage_rounded, output_boxes * tiles_per_box);
      
      // Set overage flag
      overageSet = true;
      if ($('#overage-submit').length > 0) {
        $('#overage-submit').remove();
      }
    }

    $("#ovg-calculate").click(function() {
      console.log("Calculate overage.");
      calculateOverage();
    });
</script>

                
                {%- when 'tabbed_information' -%}
                  <style>
                    .container-wrap {
                        display: flex;
                        flex-direction: column;
                      gap: 15px;
                    }

                    .cust__tab-container {
                        display: flex;
                        overflow: auto;
                        width: 100%;
                        /* gap: 5px; */
                      justify-content: space-between;
                        -ms-overflow-style: none;  /* IE and Edge */
                        scrollbar-width: none;  /* Firefox */
                    }

                    .cust__tab-container::-webkit-scrollbar {
                        display: none;  /* Chrome, Safari, and Opera */
                    }

                    .cust__tab {
                        padding: 10px 20px;
                        cursor: pointer;
                        border-bottom: none;
                        font-weight: 600;
                        background: none;
                        border: none;
                        border-bottom: 2px solid transparent;
                        background-color: #d2d9e2;
                        color: #000;
                        border-radius: 5px;
                    }

                    .cust__tab p {
                        margin: 0px;
                    }

                    .cust__tab.active {
                        background-color: #204a80;
                        color: #fff;
                    }

                    .cust__tab-content {
                        display: none;
                        margin-top: 10px;
                    }

                    .cust__tab-content.active {
                        display: block;
                    }

                    @media(max-width: 768px) {
                      .cust__tab {
                        padding: 10px 10px;
                      }
                    }
                  </style>

                  <div class="w-full h-auto block-{{ block.id }} container-wrap tabbed-info" {{ block.shopify_attributes }}>
                    <div class="cust__tab-container">
                      {% for block_inner in block.settings.block_list %}
                        <button class="cust__tab {% if forloop.first %} active {% endif %}" data-tab="{{ forloop.index }}">
                          <p>{{ block_inner.settings.heading | escape }}</p>
                        </button>
                      {% endfor %}
                    </div>

                    {% for block_inner in block.settings.block_list %}
                      <div class="cust__tab-content {% if forloop.first %} active {% endif %}" data-content="{{ forloop.index }}">
                        {{ block_inner.settings.content }}
                      </div>
                    {% endfor %}

                    <script>
                      document.addEventListener('DOMContentLoaded', function() {
                        const tabs = document.querySelectorAll('.block-{{ block.id }} .cust__tab');
                        const contents = document.querySelectorAll('.block-{{ block.id }} .cust__tab-content');

                        tabs.forEach(tab => {
                          tab.addEventListener('click', () => {
                            const tabNumber = tab.getAttribute('data-tab');

                            // Remove active class from all tabs and contents
                            tabs.forEach(t => t.classList.remove('active'));
                            contents.forEach(c => c.classList.remove('active'));

                            // Add active class to clicked tab and corresponding content
                            tab.classList.add('active');
                            document.querySelector('.block-{{ block.id }} .cust__tab-content[data-content="' + tabNumber + '"]').classList.add('active');
                          });
                        });
                      });
                    </script>
                  </div>

              {%- endcase -%}
            {%- endfor -%}
          </div>

          {%- if sticky_atc -%}
            <div
              x-show="showStickyATC"
              x-transition:enter="transition ease-out duration-300"
              x-transition:enter-start="opacity-0 transform translate-y-2"
              x-transition:enter-end="opacity-100 transform translate-y-0"
              x-transition:leave="transition ease-in duration-200"
              x-transition:leave-start="opacity-100 transform translate-y-0"
              x-transition:leave-end="opacity-0 transform translate-y-2"
              class="block fixed bottom-0 left-0 w-full z-[80] bg-scheme-background border-t-scheme-text/20 border-t py-3 px-5"
            >
              <div class="flex gap-x-2.5 flex-wrap max-w-7xl mx-auto">
                {%- for block in section.blocks -%}
                  {%- if block.type == 'sticky_add_to_cart' -%}
                    {% render 'product-sticky-add-to-cart', product: product, product_form_id: product_form_id, block: block %}
                  {%- endif -%}
                {%- endfor -%}
              </div>
            </div>
          {%- endif -%}
        </div>
      </div>
    {%- else -%}
      {% render 'card-product-empty' %}
    {%- endif -%}
  </div>
</div>

{%- if is_product_page -%}
  {%- liquid
    if product.selected_or_first_available_variant.featured_media
      assign seo_media = product.selected_or_first_available_variant.featured_media
    else
      assign seo_media = product.featured_media
    endif
    assign price_valid_until = 10 | times: 86400
  -%}
  {%- comment -%}Yoast SEO schema control block: start.{%- endcomment -%}
  {%- assign yoast_seo_settings = shop.metafields.yoast_seo.settings.value
    | default: shop.metafields.yoast_seo.settings
  -%}
  {%- if disabled_by_yoast_seo
    or yoast_seo_settings.schema.useTheme.schema
    or yoast_seo_settings.schema.useTheme.product
  -%}
    <script type="application/ld+json">
        {
          "@context": "http://schema.org/",
          "@type": "Product",
          "name": {{ product.title | json }},
          "url": {{ request.origin | append: product.url | json }},
          {% if seo_media -%}
            "image": [
              {{ seo_media | image_url: width: 1920 | prepend: "https:" | json }}
            ],
          {%- endif %}
          "description": {{ product.description | strip_html | json }},
          {% if product.selected_or_first_available_variant.sku != blank -%}
            "sku": {{ product.selected_or_first_available_variant.sku | json }},
          {%- endif %}
          "brand": {
            "@type": "Brand",
            "name": {{ product.vendor | json }}
          },
          "offers": [
            {%- for variant in product.variants -%}
              {
                "@type" : "Offer",
                {%- if variant.sku != blank -%}
                  "sku": {{ variant.sku | json }},
                {%- endif -%}
                {%- if variant.barcode.size == 12 -%}
                    "gtin12": {{ variant.barcode }},
                {%- endif -%}
                {%- if variant.barcode.size == 13 -%}
                  "gtin13": {{ variant.barcode }},
                {%- endif -%}
                {%- if variant.barcode.size == 14 -%}
                  "gtin14": {{ variant.barcode }},
                {%- endif -%}
                "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
                "price" : {{ variant.price | divided_by: 100.00 | json }},
                "priceCurrency" : {{ cart.currency.iso_code | json }},
                "priceValidUntil": "{{ 'now' | date: '%s' | plus: price_valid_until | date: '%Y-%m-%d' }}",
                "url" : {{ request.origin | append: variant.url | json }}
              }{% unless forloop.last %},{% endunless %}
            {%- endfor -%}
          ]
        }
    </script>
  {%- comment -%}Yoast SEO schema control block: end.{%- endcomment -%}
  {%- endif -%}
{%- endif -%}
